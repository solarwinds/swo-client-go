// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"
	"encoding/json"
	"fmt"
	"time"

	"github.com/Khan/genqlient/graphql"
)

type AlertActionInput struct {
	// Type of a notification service
	Type string `json:"type"`
	// List of notification configuration IDs
	ConfigurationIds []string `json:"configurationIds"`
}

// GetType returns AlertActionInput.Type, and is useful for accessing the field via an interface.
func (v *AlertActionInput) GetType() string { return v.Type }

// GetConfigurationIds returns AlertActionInput.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *AlertActionInput) GetConfigurationIds() []string { return v.ConfigurationIds }

// Part of Alert definition condition metadata. Alert definition condition data source defines what kind of data is used
// for condition evaluations.
type AlertConditionDataSource string

const (
	AlertConditionDataSourceMetric  AlertConditionDataSource = "METRIC"
	AlertConditionDataSourceLog     AlertConditionDataSource = "LOG"
	AlertConditionDataSourceEvent   AlertConditionDataSource = "EVENT"
	AlertConditionDataSourceUnknown AlertConditionDataSource = "UNKNOWN"
)

// Part of Alert definition condition metadata. Alert definition condition data type defines additional narrowing down
// of the data source (e.g. `events` could be further limited to `anomaly-events`).
type AlertConditionDataType string

const (
	AlertConditionDataTypeAnomaly    AlertConditionDataType = "ANOMALY"
	AlertConditionDataTypeKubernetes AlertConditionDataType = "KUBERNETES"
)

type AlertConditionMatchFieldRuleInput struct {
	// Field name to apply filtering rule on
	FieldName string `json:"fieldName"`
	// Rules to apply - multiple rules are joined by `OR`
	Rules []AlertConditionMatchRuleInput `json:"rules"`
}

// GetFieldName returns AlertConditionMatchFieldRuleInput.FieldName, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchFieldRuleInput) GetFieldName() string { return v.FieldName }

// GetRules returns AlertConditionMatchFieldRuleInput.Rules, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchFieldRuleInput) GetRules() []AlertConditionMatchRuleInput { return v.Rules }

type AlertConditionMatchRuleInput struct {
	Type AlertConditionMatchRuleType `json:"type"`
	// Negate match (wraps in `NOT`)
	Negate bool `json:"negate"`
	// Value match match
	Value string `json:"value"`
}

// GetType returns AlertConditionMatchRuleInput.Type, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchRuleInput) GetType() AlertConditionMatchRuleType { return v.Type }

// GetNegate returns AlertConditionMatchRuleInput.Negate, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchRuleInput) GetNegate() bool { return v.Negate }

// GetValue returns AlertConditionMatchRuleInput.Value, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchRuleInput) GetValue() string { return v.Value }

// Alert definition condition matching rule types
type AlertConditionMatchRuleType string

const (
	AlertConditionMatchRuleTypeEq       AlertConditionMatchRuleType = "EQ"
	AlertConditionMatchRuleTypeNe       AlertConditionMatchRuleType = "NE"
	AlertConditionMatchRuleTypeContains AlertConditionMatchRuleType = "CONTAINS"
	AlertConditionMatchRuleTypeMatches  AlertConditionMatchRuleType = "MATCHES"
)

// Filtering input based on Alert definition condition metadata.
// See documentation for individual types for details.
type AlertConditionMetadataInput struct {
	Scopes     []AlertConditionScope    `json:"scopes"`
	DataSource AlertConditionDataSource `json:"dataSource"`
	DataTypes  []AlertConditionDataType `json:"dataTypes"`
}

// GetScopes returns AlertConditionMetadataInput.Scopes, and is useful for accessing the field via an interface.
func (v *AlertConditionMetadataInput) GetScopes() []AlertConditionScope { return v.Scopes }

// GetDataSource returns AlertConditionMetadataInput.DataSource, and is useful for accessing the field via an interface.
func (v *AlertConditionMetadataInput) GetDataSource() AlertConditionDataSource { return v.DataSource }

// GetDataTypes returns AlertConditionMetadataInput.DataTypes, and is useful for accessing the field via an interface.
func (v *AlertConditionMetadataInput) GetDataTypes() []AlertConditionDataType { return v.DataTypes }

type AlertConditionNodeEntityFilterInput struct {
	// Filter by Entity types
	Types []string `json:"types"`
	// Filter by Entity IDs
	Ids []string `json:"ids"`
	// Contextual (smart) search query
	Query *string `json:"query"`
	// Filter by Entity fields - multiple fields are joined by `AND`
	Fields []AlertConditionMatchFieldRuleInput `json:"fields"`
}

// GetTypes returns AlertConditionNodeEntityFilterInput.Types, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetTypes() []string { return v.Types }

// GetIds returns AlertConditionNodeEntityFilterInput.Ids, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetIds() []string { return v.Ids }

// GetQuery returns AlertConditionNodeEntityFilterInput.Query, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetQuery() *string { return v.Query }

// GetFields returns AlertConditionNodeEntityFilterInput.Fields, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetFields() []AlertConditionMatchFieldRuleInput {
	return v.Fields
}

// See [docs](https://github.com/solarwindscloud/nighthawk-alerting/blob/develop/docs/how-to-build-condition.md) on how to work with condition nodes.
type AlertConditionNodeInput struct {
	// Condition node ID.
	Id int `json:"id"`
	// Node (operator) type. Supported values:
	// - `aggregationOperator` (child of `binaryOperator`)
	// - `binaryOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `constantValue` (root, or child of `aggregationOperator`, `binaryOperator`)
	// - `logicalOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `attributeField` (child of `binaryOperator`)
	// - `metricField` (child of `binaryOperator`, `aggregationOperator`)
	// - `queryField` (child of `aggregationOperator`)
	// - `unaryOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `relationshipOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	Type string `json:"type"`
	// Operator for combining operands. Supported values:
	// - For aggregationOperator: `COUNT`, `MIN`, `MAX`, `AVG`, `SUM`, `LAST`
	// - For binaryOperator: `=`, `!=`, `>`, `<`, `>=`, `<=`, `IN`
	// - For logicalOperator: `AND`, `OR`
	// - For unaryOperator: `!`
	// - For relationshipOperator: null
	Operator *string `json:"operator"`
	// Ordered list of child condition nodes IDs.
	OperandIds []int `json:"operandIds"`
	// Entity filter for `metricField`, `queryField` and 'scopeField' nodes. When defined (not null), node is scoped to entity.
	EntityFilter *AlertConditionNodeEntityFilterInput `json:"entityFilter"`
	// Measurement filter for metric tags
	MetricFilter *AlertFilterExpressionInput `json:"metricFilter"`
	// Entity metric field for `metricField` nodes
	FieldName *string `json:"fieldName"`
	// Data type for `constantValue` nodes. Supported values: `boolean`, `number`, `string`
	DataType *string `json:"dataType"`
	// String representation of value for `constantValue` nodes.
	Value *string `json:"value"`
	// String representation of values for `constantValue` nodes in case of 'IN' operator
	Values []string `json:"values"`
	// Query specification for `queryField` nodes.
	Query *string `json:"query"`
	// Events/logs namespace (in Chainsaw) for `queryField` nodes.
	Namespace *string `json:"namespace"`
	// Group by specific metric tag(s).
	GroupByMetricTag []string `json:"groupByMetricTag"`
}

// GetId returns AlertConditionNodeInput.Id, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetId() int { return v.Id }

// GetType returns AlertConditionNodeInput.Type, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetType() string { return v.Type }

// GetOperator returns AlertConditionNodeInput.Operator, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetOperator() *string { return v.Operator }

// GetOperandIds returns AlertConditionNodeInput.OperandIds, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetOperandIds() []int { return v.OperandIds }

// GetEntityFilter returns AlertConditionNodeInput.EntityFilter, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetEntityFilter() *AlertConditionNodeEntityFilterInput {
	return v.EntityFilter
}

// GetMetricFilter returns AlertConditionNodeInput.MetricFilter, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetMetricFilter() *AlertFilterExpressionInput {
	return v.MetricFilter
}

// GetFieldName returns AlertConditionNodeInput.FieldName, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetFieldName() *string { return v.FieldName }

// GetDataType returns AlertConditionNodeInput.DataType, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetDataType() *string { return v.DataType }

// GetValue returns AlertConditionNodeInput.Value, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetValue() *string { return v.Value }

// GetValues returns AlertConditionNodeInput.Values, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetValues() []string { return v.Values }

// GetQuery returns AlertConditionNodeInput.Query, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetQuery() *string { return v.Query }

// GetNamespace returns AlertConditionNodeInput.Namespace, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetNamespace() *string { return v.Namespace }

// GetGroupByMetricTag returns AlertConditionNodeInput.GroupByMetricTag, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetGroupByMetricTag() []string { return v.GroupByMetricTag }

// Part of Alert definition condition metadata. Alert definition condition scope defines what is the condition scoped to.
// See documentation for individual possibilities for details. Some combinations are allowed, such as `[ENTITY, TAG]`.
type AlertConditionScope string

const (
	// Alert definition condition is evaluated separately for individual entities.
	AlertConditionScopeEntity AlertConditionScope = "ENTITY"
	// Alert definition condition is evaluated separately for individual values of a selected metric tag.
	AlertConditionScopeTag AlertConditionScope = "TAG"
	// Alert definition condition is evaluated once for the entire system (for all entities it can be applied to).
	AlertConditionScopeWholeSystem AlertConditionScope = "WHOLE_SYSTEM"
	// Alert definition condition is evaluated separately for individual combinations of parent-child entities.
	AlertConditionScopeEntityRelationship AlertConditionScope = "ENTITY_RELATIONSHIP"
)

type AlertDefinitionInput struct {
	// Alert definition name
	Name string `json:"name"`
	// Alert definition description
	Description *string `json:"description"`
	// Alert runbook link
	RunbookLink *string `json:"runbookLink"`
	// Alert definition severity
	Severity AlertSeverity `json:"severity"`
	// Enabled whether Alert definition shall be evaluated
	Enabled bool `json:"enabled"`
	// Ordered list of condition nodes representing the flatten condition tree.
	// The first item is the tree root.
	Condition []AlertConditionNodeInput `json:"condition"`
	// List of alert actions that shall be triggered in case of alert **FIRING**
	Actions []AlertActionInput `json:"actions"`
	// A flag indicating whether to send a notification when active alert returns to normal.
	// It will be set to *false* if not specified.
	TriggerResetActions *bool `json:"triggerResetActions"`
}

// GetName returns AlertDefinitionInput.Name, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetName() string { return v.Name }

// GetDescription returns AlertDefinitionInput.Description, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetDescription() *string { return v.Description }

// GetRunbookLink returns AlertDefinitionInput.RunbookLink, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetRunbookLink() *string { return v.RunbookLink }

// GetSeverity returns AlertDefinitionInput.Severity, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetSeverity() AlertSeverity { return v.Severity }

// GetEnabled returns AlertDefinitionInput.Enabled, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetEnabled() bool { return v.Enabled }

// GetCondition returns AlertDefinitionInput.Condition, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetCondition() []AlertConditionNodeInput { return v.Condition }

// GetActions returns AlertDefinitionInput.Actions, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetActions() []AlertActionInput { return v.Actions }

// GetTriggerResetActions returns AlertDefinitionInput.TriggerResetActions, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetTriggerResetActions() *bool { return v.TriggerResetActions }

// Generic filtering input.
type AlertFilterExpressionInput struct {
	// Name of the property to filter on.
	PropertyName *string `json:"propertyName"`
	// Value of the property for operations that expect single value, such as EQ, NE, GT, ...
	PropertyValue *string `json:"propertyValue"`
	// Values of the property for operations expecting multiple values, such as IN.
	PropertyValues []*string `json:"propertyValues"`
	// Operation to use for the evaluation. Default: "EQ"
	Operation FilterOperation `json:"operation"`
	// Children filters in case of "operator" being one of "OR", "AND", "NOT".
	// In such case the "propertyName" and "propertyValue" are ignored.
	Children []AlertFilterExpressionInput `json:"children"`
}

// GetPropertyName returns AlertFilterExpressionInput.PropertyName, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetPropertyName() *string { return v.PropertyName }

// GetPropertyValue returns AlertFilterExpressionInput.PropertyValue, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetPropertyValue() *string { return v.PropertyValue }

// GetPropertyValues returns AlertFilterExpressionInput.PropertyValues, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetPropertyValues() []*string { return v.PropertyValues }

// GetOperation returns AlertFilterExpressionInput.Operation, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetOperation() FilterOperation { return v.Operation }

// GetChildren returns AlertFilterExpressionInput.Children, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetChildren() []AlertFilterExpressionInput { return v.Children }

type AlertFilterInput struct {
	// By Alert definition ID
	Id *string `json:"id"`
	// By user ID
	UserId *string `json:"userId"`
	// By Alert definition name
	Name *string `json:"name"`
	// By list of Alert definition severities
	Severities []AlertSeverity `json:"severities"`
	// By Alert definition enablement
	Enabled *bool `json:"enabled"`
	// By trigger status
	Triggered *bool `json:"triggered"`
	// By list of Entity IDs
	EntityIds []string `json:"entityIds"`
	// By list of Entity types
	EntityTypes []string `json:"entityTypes"`
	// By alert filter expression
	Filter *AlertFilterExpressionInput `json:"filter"`
	// By action configuration ID
	ActionConfigurationId *string `json:"actionConfigurationId"`
	// By list of condition types
	// @deprecated(reason: "Filter by `conditionMetadata` instead.")
	ConditionTypes []ConditionType `json:"conditionTypes"`
	// By specific properties of the alert definition
	ConditionMetadata []AlertConditionMetadataInput `json:"conditionMetadata"`
	// By swi-query expression
	Query *string `json:"query"`
}

// GetId returns AlertFilterInput.Id, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetId() *string { return v.Id }

// GetUserId returns AlertFilterInput.UserId, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetUserId() *string { return v.UserId }

// GetName returns AlertFilterInput.Name, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetName() *string { return v.Name }

// GetSeverities returns AlertFilterInput.Severities, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetSeverities() []AlertSeverity { return v.Severities }

// GetEnabled returns AlertFilterInput.Enabled, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetEnabled() *bool { return v.Enabled }

// GetTriggered returns AlertFilterInput.Triggered, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetTriggered() *bool { return v.Triggered }

// GetEntityIds returns AlertFilterInput.EntityIds, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetEntityIds() []string { return v.EntityIds }

// GetEntityTypes returns AlertFilterInput.EntityTypes, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetEntityTypes() []string { return v.EntityTypes }

// GetFilter returns AlertFilterInput.Filter, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetFilter() *AlertFilterExpressionInput { return v.Filter }

// GetActionConfigurationId returns AlertFilterInput.ActionConfigurationId, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetActionConfigurationId() *string { return v.ActionConfigurationId }

// GetConditionTypes returns AlertFilterInput.ConditionTypes, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetConditionTypes() []ConditionType { return v.ConditionTypes }

// GetConditionMetadata returns AlertFilterInput.ConditionMetadata, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetConditionMetadata() []AlertConditionMetadataInput {
	return v.ConditionMetadata
}

// GetQuery returns AlertFilterInput.Query, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetQuery() *string { return v.Query }

// Alert definition severities.
type AlertSeverity string

const (
	AlertSeverityInfo     AlertSeverity = "INFO"
	AlertSeverityWarning  AlertSeverity = "WARNING"
	AlertSeverityCritical AlertSeverity = "CRITICAL"
)

type AvailabilityCheckSettingsInput struct {
	// Use this field to configure whether availability tests should check for presence or absence of a
	// particular string on a page.
	//
	// If the `operator` is DOES_NOT_CONTAIN and the `value` is found on the page, the availability test
	// will fail.
	//
	// Likewise, if the `operator` is CONTAINS and the `value` is not found on the page, the
	// availability test will fail.
	//
	// If omitted or set to null, the string checking functionality will be disabled.
	CheckForString *CheckForStringInput `json:"checkForString"`
	// Configure how often availability tests should be performed.
	//
	// Provide a number of seconds that is divisible by 60 and no greater than 14400 (4 hours).
	TestIntervalInSeconds int `json:"testIntervalInSeconds"`
	// Configure which protocols need availability tests to be performed. At least one protocol must
	// be provided.
	Protocols []WebsiteProtocol `json:"protocols"`
	// Configure cloud platforms of the synthetic availability test probes.
	//
	// If omitted or set to null, no particular cloud platform will be enforced.
	PlatformOptions *ProbePlatformOptionsInput `json:"platformOptions"`
	// Configure locations of the synthetic availability test probes.
	//
	// Acceptable `values` depend on the selected `type` and actual values of existing probes.
	//
	// To find out all possible `values` of each type, run the following query:
	// ```
	// query {
	// dem {
	// probes {
	// region
	// country
	// city
	// }
	// }
	// }
	// ```
	TestFrom ProbeLocationInput `json:"testFrom"`
	// Configure monitoring of SSL/TLS certificates validity. This option is relevant for HTTPS
	// protocol only.
	//
	// If omitted or set to null, SSL monitoring will be disabled and its previous configuration discarded.
	Ssl *SslMonitoringInput `json:"ssl"`
	// Configure custom request headers to be sent with each availability test. It is possible to
	// provide multiple headers with the same name.
	//
	// If omitted, set to null or set to an empty array, no custom headers will be sent.
	CustomHeaders []CustomHeaderInput `json:"customHeaders"`
}

// GetCheckForString returns AvailabilityCheckSettingsInput.CheckForString, and is useful for accessing the field via an interface.
func (v *AvailabilityCheckSettingsInput) GetCheckForString() *CheckForStringInput {
	return v.CheckForString
}

// GetTestIntervalInSeconds returns AvailabilityCheckSettingsInput.TestIntervalInSeconds, and is useful for accessing the field via an interface.
func (v *AvailabilityCheckSettingsInput) GetTestIntervalInSeconds() int {
	return v.TestIntervalInSeconds
}

// GetProtocols returns AvailabilityCheckSettingsInput.Protocols, and is useful for accessing the field via an interface.
func (v *AvailabilityCheckSettingsInput) GetProtocols() []WebsiteProtocol { return v.Protocols }

// GetPlatformOptions returns AvailabilityCheckSettingsInput.PlatformOptions, and is useful for accessing the field via an interface.
func (v *AvailabilityCheckSettingsInput) GetPlatformOptions() *ProbePlatformOptionsInput {
	return v.PlatformOptions
}

// GetTestFrom returns AvailabilityCheckSettingsInput.TestFrom, and is useful for accessing the field via an interface.
func (v *AvailabilityCheckSettingsInput) GetTestFrom() ProbeLocationInput { return v.TestFrom }

// GetSsl returns AvailabilityCheckSettingsInput.Ssl, and is useful for accessing the field via an interface.
func (v *AvailabilityCheckSettingsInput) GetSsl() *SslMonitoringInput { return v.Ssl }

// GetCustomHeaders returns AvailabilityCheckSettingsInput.CustomHeaders, and is useful for accessing the field via an interface.
func (v *AvailabilityCheckSettingsInput) GetCustomHeaders() []CustomHeaderInput {
	return v.CustomHeaders
}

type CheckForStringInput struct {
	// Defines whether the check should pass only when the string is present on the page (CONTAINS) or
	// only when it is absent (DOES_NOT_CONTAIN).
	Operator CheckStringOperator `json:"operator"`
	// The string that which will be searched in the page source code.
	Value string `json:"value"`
}

// GetOperator returns CheckForStringInput.Operator, and is useful for accessing the field via an interface.
func (v *CheckForStringInput) GetOperator() CheckStringOperator { return v.Operator }

// GetValue returns CheckForStringInput.Value, and is useful for accessing the field via an interface.
func (v *CheckForStringInput) GetValue() string { return v.Value }

type CheckStringOperator string

const (
	CheckStringOperatorContains       CheckStringOperator = "CONTAINS"
	CheckStringOperatorDoesNotContain CheckStringOperator = "DOES_NOT_CONTAIN"
)

// *DEPRECATED:* `ConditionType` is now described by metadata composed of `[AlertConditionScope]`, `AlertConditionDataSource` and `[AlertConditionDataType]`.
// Alert definition condition types
type ConditionType string

const (
	ConditionTypeEntityMetric     ConditionType = "ENTITY_METRIC"
	ConditionTypeStandaloneMetric ConditionType = "STANDALONE_METRIC"
	ConditionTypeEntityLogQuery   ConditionType = "ENTITY_LOG_QUERY"
	ConditionTypeLogQuery         ConditionType = "LOG_QUERY"
	ConditionTypeAnomalyEvents    ConditionType = "ANOMALY_EVENTS"
	ConditionTypeKubernetesEvents ConditionType = "KUBERNETES_EVENTS"
	ConditionTypeUnknown          ConditionType = "UNKNOWN"
)

type CreateDashboardInput struct {
	Name        string         `json:"name"`
	Description *string        `json:"description"`
	IsPrivate   *bool          `json:"isPrivate"`
	Mode        *DashboardMode `json:"mode"`
	CategoryId  *string        `json:"categoryId"`
	Widgets     []WidgetInput  `json:"widgets"`
	Layout      []LayoutInput  `json:"layout"`
}

// GetName returns CreateDashboardInput.Name, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetName() string { return v.Name }

// GetDescription returns CreateDashboardInput.Description, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetDescription() *string { return v.Description }

// GetIsPrivate returns CreateDashboardInput.IsPrivate, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetIsPrivate() *bool { return v.IsPrivate }

// GetMode returns CreateDashboardInput.Mode, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetMode() *DashboardMode { return v.Mode }

// GetCategoryId returns CreateDashboardInput.CategoryId, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetCategoryId() *string { return v.CategoryId }

// GetWidgets returns CreateDashboardInput.Widgets, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetWidgets() []WidgetInput { return v.Widgets }

// GetLayout returns CreateDashboardInput.Layout, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetLayout() []LayoutInput { return v.Layout }

type CreateNotificationServiceConfigurationInput struct {
	Type        string  `json:"type"`
	Title       string  `json:"title"`
	Description *string `json:"description"`
	Settings    any     `json:"settings"`
}

// GetType returns CreateNotificationServiceConfigurationInput.Type, and is useful for accessing the field via an interface.
func (v *CreateNotificationServiceConfigurationInput) GetType() string { return v.Type }

// GetTitle returns CreateNotificationServiceConfigurationInput.Title, and is useful for accessing the field via an interface.
func (v *CreateNotificationServiceConfigurationInput) GetTitle() string { return v.Title }

// GetDescription returns CreateNotificationServiceConfigurationInput.Description, and is useful for accessing the field via an interface.
func (v *CreateNotificationServiceConfigurationInput) GetDescription() *string { return v.Description }

// GetSettings returns CreateNotificationServiceConfigurationInput.Settings, and is useful for accessing the field via an interface.
func (v *CreateNotificationServiceConfigurationInput) GetSettings() any { return v.Settings }

type CreateWebsiteInput struct {
	// Name of the website, which must be unique within the organization. The website must also not
	// contain any control characters, any white space other than space (U+0020), or any consecutive,
	// leading or trailing spaces.
	Name string `json:"name"`
	// URL of the website. Must be a valid URL with no leading or trailing white space. Must not contain
	// invalid port number (>65535).
	Url string `json:"url"`
	// Use this field to configure availability tests for the website.
	//
	// You are required to configure at least availability monitoring or real user monitoring
	// to be able to create website.
	AvailabilityCheckSettings *AvailabilityCheckSettingsInput `json:"availabilityCheckSettings"`
	// Use this field to configure real user monitoring (RUM) for the website.
	//
	// You are required to configure at least availability monitoring or real user monitoring
	// to be able to create website.
	Rum *RumMonitoringInput `json:"rum"`
}

// GetName returns CreateWebsiteInput.Name, and is useful for accessing the field via an interface.
func (v *CreateWebsiteInput) GetName() string { return v.Name }

// GetUrl returns CreateWebsiteInput.Url, and is useful for accessing the field via an interface.
func (v *CreateWebsiteInput) GetUrl() string { return v.Url }

// GetAvailabilityCheckSettings returns CreateWebsiteInput.AvailabilityCheckSettings, and is useful for accessing the field via an interface.
func (v *CreateWebsiteInput) GetAvailabilityCheckSettings() *AvailabilityCheckSettingsInput {
	return v.AvailabilityCheckSettings
}

// GetRum returns CreateWebsiteInput.Rum, and is useful for accessing the field via an interface.
func (v *CreateWebsiteInput) GetRum() *RumMonitoringInput { return v.Rum }

type CustomHeaderInput struct {
	// Name of a request header. Must contain only characters allowed by RFC: a-z, A-Z, 0-9, - and _.
	Name string `json:"name"`
	// Value of a request header.
	Value string `json:"value"`
}

// GetName returns CustomHeaderInput.Name, and is useful for accessing the field via an interface.
func (v *CustomHeaderInput) GetName() string { return v.Name }

// GetValue returns CustomHeaderInput.Value, and is useful for accessing the field via an interface.
func (v *CustomHeaderInput) GetValue() string { return v.Value }

type DashboardMode string

const (
	DashboardModeStandard DashboardMode = "Standard"
	DashboardModeAnalysis DashboardMode = "Analysis"
)

type DeleteDashboardInput struct {
	Id string `json:"id"`
}

// GetId returns DeleteDashboardInput.Id, and is useful for accessing the field via an interface.
func (v *DeleteDashboardInput) GetId() string { return v.Id }

type DeleteNotificationServiceConfigurationInput struct {
	Id string `json:"id"`
}

// GetId returns DeleteNotificationServiceConfigurationInput.Id, and is useful for accessing the field via an interface.
func (v *DeleteNotificationServiceConfigurationInput) GetId() string { return v.Id }

type DeleteWebsiteInput struct {
	// The id of the website to be deleted.
	Id string `json:"id"`
}

// GetId returns DeleteWebsiteInput.Id, and is useful for accessing the field via an interface.
func (v *DeleteWebsiteInput) GetId() string { return v.Id }

// Allowed entity filtering operators
type FilterOperation string

const (
	FilterOperationEq       FilterOperation = "EQ"
	FilterOperationNe       FilterOperation = "NE"
	FilterOperationGt       FilterOperation = "GT"
	FilterOperationGe       FilterOperation = "GE"
	FilterOperationLt       FilterOperation = "LT"
	FilterOperationLe       FilterOperation = "LE"
	FilterOperationContains FilterOperation = "CONTAINS"
	FilterOperationMatches  FilterOperation = "MATCHES"
	FilterOperationIn       FilterOperation = "IN"
	FilterOperationAnd      FilterOperation = "AND"
	FilterOperationOr       FilterOperation = "OR"
	FilterOperationNot      FilterOperation = "NOT"
	FilterOperationExists   FilterOperation = "EXISTS"
)

type LayoutInput struct {
	Id     string `json:"id"`
	X      int    `json:"x"`
	Y      int    `json:"y"`
	Width  int    `json:"width"`
	Height int    `json:"height"`
}

// GetId returns LayoutInput.Id, and is useful for accessing the field via an interface.
func (v *LayoutInput) GetId() string { return v.Id }

// GetX returns LayoutInput.X, and is useful for accessing the field via an interface.
func (v *LayoutInput) GetX() int { return v.X }

// GetY returns LayoutInput.Y, and is useful for accessing the field via an interface.
func (v *LayoutInput) GetY() int { return v.Y }

// GetWidth returns LayoutInput.Width, and is useful for accessing the field via an interface.
func (v *LayoutInput) GetWidth() int { return v.Width }

// GetHeight returns LayoutInput.Height, and is useful for accessing the field via an interface.
func (v *LayoutInput) GetHeight() int { return v.Height }

// Paging input for paginated queries. If not specified the first page of the results is returned and it will contain
// up to X items where X is a value configured in the system.
type PagingInput struct {
	// Fetch items that exist before this cursor. Cursor can be obtained from PageInfo data returned in previous query.
	Before *string `json:"before"`
	// Fetch items that exist after this cursor. Cursor can be obtained from PageInfo data returned in previous query.
	After *string `json:"after"`
	// Get first X items from the result. This value can be used alone or in combination with "after".
	// Other combinations are invalid and will lead to query error.
	First *int `json:"first"`
	// Get last X items from the result. This value can be used alone or in combination with "before".
	// Other combinations are invalid and will lead to query error.
	Last *int `json:"last"`
}

// GetBefore returns PagingInput.Before, and is useful for accessing the field via an interface.
func (v *PagingInput) GetBefore() *string { return v.Before }

// GetAfter returns PagingInput.After, and is useful for accessing the field via an interface.
func (v *PagingInput) GetAfter() *string { return v.After }

// GetFirst returns PagingInput.First, and is useful for accessing the field via an interface.
func (v *PagingInput) GetFirst() *int { return v.First }

// GetLast returns PagingInput.Last, and is useful for accessing the field via an interface.
func (v *PagingInput) GetLast() *int { return v.Last }

type ProbeLocationInput struct {
	Type ProbeLocationType `json:"type"`
	// A list of probe location values of the selected `type`. At least one value matching an existing
	// probe must be provided.
	Values []string `json:"values"`
}

// GetType returns ProbeLocationInput.Type, and is useful for accessing the field via an interface.
func (v *ProbeLocationInput) GetType() ProbeLocationType { return v.Type }

// GetValues returns ProbeLocationInput.Values, and is useful for accessing the field via an interface.
func (v *ProbeLocationInput) GetValues() []string { return v.Values }

type ProbeLocationType string

const (
	ProbeLocationTypeRegion  ProbeLocationType = "REGION"
	ProbeLocationTypeCountry ProbeLocationType = "COUNTRY"
	ProbeLocationTypeCity    ProbeLocationType = "CITY"
)

type ProbePlatform string

const (
	ProbePlatformAws         ProbePlatform = "AWS"
	ProbePlatformAzure       ProbePlatform = "AZURE"
	ProbePlatformGoogleCloud ProbePlatform = "GOOGLE_CLOUD"
)

type ProbePlatformOptionsInput struct {
	// Cloud platforms of the synthetic probes to be used for availability tests.
	ProbePlatforms []ProbePlatform `json:"probePlatforms"`
	// Use this field to configure whether availability tests should be performed from all selected
	// platforms or one randomly selected platform. It has no effect if you provided only one platform
	// in the `probePlatforms` field.
	//
	// If set to true, a separate test is made from each of the selected platforms.
	//
	// If set to false, only one of the selected platforms is chosen every time.
	//
	// If omitted, the previous setting will stay in effect. If there is no previous setting, the value
	// will default to false.
	TestFromAll *bool `json:"testFromAll"`
}

// GetProbePlatforms returns ProbePlatformOptionsInput.ProbePlatforms, and is useful for accessing the field via an interface.
func (v *ProbePlatformOptionsInput) GetProbePlatforms() []ProbePlatform { return v.ProbePlatforms }

// GetTestFromAll returns ProbePlatformOptionsInput.TestFromAll, and is useful for accessing the field via an interface.
func (v *ProbePlatformOptionsInput) GetTestFromAll() *bool { return v.TestFromAll }

type RumMonitoringInput struct {
	ApdexTimeInSeconds *int  `json:"apdexTimeInSeconds"`
	Spa                *bool `json:"spa"`
}

// GetApdexTimeInSeconds returns RumMonitoringInput.ApdexTimeInSeconds, and is useful for accessing the field via an interface.
func (v *RumMonitoringInput) GetApdexTimeInSeconds() *int { return v.ApdexTimeInSeconds }

// GetSpa returns RumMonitoringInput.Spa, and is useful for accessing the field via an interface.
func (v *RumMonitoringInput) GetSpa() *bool { return v.Spa }

// Sort direction for query result sorting
type SortDirection string

const (
	SortDirectionAsc  SortDirection = "ASC"
	SortDirectionDesc SortDirection = "DESC"
)

// Query sort definition. Sort support multiple properties and two sort directions.
type SortInput struct {
	Sorts []SortItemInput `json:"sorts"`
}

// GetSorts returns SortInput.Sorts, and is useful for accessing the field via an interface.
func (v *SortInput) GetSorts() []SortItemInput { return v.Sorts }

// Single property sort definition.
type SortItemInput struct {
	PropertyName string         `json:"propertyName"`
	Direction    *SortDirection `json:"direction"`
}

// GetPropertyName returns SortItemInput.PropertyName, and is useful for accessing the field via an interface.
func (v *SortItemInput) GetPropertyName() string { return v.PropertyName }

// GetDirection returns SortItemInput.Direction, and is useful for accessing the field via an interface.
func (v *SortItemInput) GetDirection() *SortDirection { return v.Direction }

type SslMonitoringInput struct {
	// Whether SSL monitoring is enabled for the website.
	//
	// If set to false, SSL monitoring will be disabled, but the other settings will be remembered in
	// case you re-enable it later.
	//
	// If omitted, the previous setting will stay in effect. If there is no previous setting, the value
	// will default to false.
	Enabled *bool `json:"enabled"`
	// Number of days before the expiration date an SSL certificate will be considered 'expiring.'
	DaysPriorToExpiration *int `json:"daysPriorToExpiration"`
	// Use this option to limit the certificate expiration check to only the first certificate in the
	// chain (normally the host certificate). This way you will not be warned about impending expiration
	// of intermediate or root Certification Authority certificates in the chain.
	//
	// This option does not affect any other certificate validity checks besides expiration.
	//
	// If omitted, the previous setting will stay in effect. If there is no previous setting, the value
	// will default to false.
	IgnoreIntermediateCertificates *bool `json:"ignoreIntermediateCertificates"`
}

// GetEnabled returns SslMonitoringInput.Enabled, and is useful for accessing the field via an interface.
func (v *SslMonitoringInput) GetEnabled() *bool { return v.Enabled }

// GetDaysPriorToExpiration returns SslMonitoringInput.DaysPriorToExpiration, and is useful for accessing the field via an interface.
func (v *SslMonitoringInput) GetDaysPriorToExpiration() *int { return v.DaysPriorToExpiration }

// GetIgnoreIntermediateCertificates returns SslMonitoringInput.IgnoreIntermediateCertificates, and is useful for accessing the field via an interface.
func (v *SslMonitoringInput) GetIgnoreIntermediateCertificates() *bool {
	return v.IgnoreIntermediateCertificates
}

type UpdateDashboardInput struct {
	Id          string        `json:"id"`
	Name        string        `json:"name"`
	Description *string       `json:"description"`
	IsPrivate   *bool         `json:"isPrivate"`
	CategoryId  *string       `json:"categoryId"`
	Widgets     []WidgetInput `json:"widgets"`
	Layout      []LayoutInput `json:"layout"`
}

// GetId returns UpdateDashboardInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetId() string { return v.Id }

// GetName returns UpdateDashboardInput.Name, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetName() string { return v.Name }

// GetDescription returns UpdateDashboardInput.Description, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetDescription() *string { return v.Description }

// GetIsPrivate returns UpdateDashboardInput.IsPrivate, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetIsPrivate() *bool { return v.IsPrivate }

// GetCategoryId returns UpdateDashboardInput.CategoryId, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetCategoryId() *string { return v.CategoryId }

// GetWidgets returns UpdateDashboardInput.Widgets, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetWidgets() []WidgetInput { return v.Widgets }

// GetLayout returns UpdateDashboardInput.Layout, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetLayout() []LayoutInput { return v.Layout }

type UpdateNotificationServiceConfigurationInput struct {
	Id          string  `json:"id"`
	Title       *string `json:"title"`
	Description *string `json:"description"`
	Settings    *any    `json:"settings"`
}

// GetId returns UpdateNotificationServiceConfigurationInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateNotificationServiceConfigurationInput) GetId() string { return v.Id }

// GetTitle returns UpdateNotificationServiceConfigurationInput.Title, and is useful for accessing the field via an interface.
func (v *UpdateNotificationServiceConfigurationInput) GetTitle() *string { return v.Title }

// GetDescription returns UpdateNotificationServiceConfigurationInput.Description, and is useful for accessing the field via an interface.
func (v *UpdateNotificationServiceConfigurationInput) GetDescription() *string { return v.Description }

// GetSettings returns UpdateNotificationServiceConfigurationInput.Settings, and is useful for accessing the field via an interface.
func (v *UpdateNotificationServiceConfigurationInput) GetSettings() *any { return v.Settings }

type UpdateWebsiteInput struct {
	// The id of the website to be updated.
	Id string `json:"id"`
	// Name of the website. Must be unique within organization. Must not contain any control characters,
	// any whitespace other than regular space, any leading, trailing or consecutive whitespace.
	Name string `json:"name"`
	// URL of the website. Must be a valid URL with no leading or trailing whitespace. Must not contain
	// invalid port number (>65535).
	Url string `json:"url"`
	// Use this field to configure availability tests for the website.
	//
	// You are required to configure either availability monitoring or real user monitoring
	// to be able to create website.
	AvailabilityCheckSettings *AvailabilityCheckSettingsInput `json:"availabilityCheckSettings"`
	// Use this field to configure real user monitoring (RUM) for the website.
	//
	// You are required to have at least availability monitoring or real user monitoring
	// configured on a website website.
	Rum *RumMonitoringInput `json:"rum"`
}

// GetId returns UpdateWebsiteInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateWebsiteInput) GetId() string { return v.Id }

// GetName returns UpdateWebsiteInput.Name, and is useful for accessing the field via an interface.
func (v *UpdateWebsiteInput) GetName() string { return v.Name }

// GetUrl returns UpdateWebsiteInput.Url, and is useful for accessing the field via an interface.
func (v *UpdateWebsiteInput) GetUrl() string { return v.Url }

// GetAvailabilityCheckSettings returns UpdateWebsiteInput.AvailabilityCheckSettings, and is useful for accessing the field via an interface.
func (v *UpdateWebsiteInput) GetAvailabilityCheckSettings() *AvailabilityCheckSettingsInput {
	return v.AvailabilityCheckSettings
}

// GetRum returns UpdateWebsiteInput.Rum, and is useful for accessing the field via an interface.
func (v *UpdateWebsiteInput) GetRum() *RumMonitoringInput { return v.Rum }

type WebsiteProtocol string

const (
	WebsiteProtocolHttp  WebsiteProtocol = "HTTP"
	WebsiteProtocolHttps WebsiteProtocol = "HTTPS"
)

type WidgetInput struct {
	Id         string  `json:"id"`
	Title      *string `json:"title"`
	Type       string  `json:"type"`
	Properties *any    `json:"properties"`
}

// GetId returns WidgetInput.Id, and is useful for accessing the field via an interface.
func (v *WidgetInput) GetId() string { return v.Id }

// GetTitle returns WidgetInput.Title, and is useful for accessing the field via an interface.
func (v *WidgetInput) GetTitle() *string { return v.Title }

// GetType returns WidgetInput.Type, and is useful for accessing the field via an interface.
func (v *WidgetInput) GetType() string { return v.Type }

// GetProperties returns WidgetInput.Properties, and is useful for accessing the field via an interface.
func (v *WidgetInput) GetProperties() *any { return v.Properties }

// __createAlertDefinitionInput is used internally by genqlient
type __createAlertDefinitionInput struct {
	Definition AlertDefinitionInput `json:"definition"`
}

// GetDefinition returns __createAlertDefinitionInput.Definition, and is useful for accessing the field via an interface.
func (v *__createAlertDefinitionInput) GetDefinition() AlertDefinitionInput { return v.Definition }

// __createDashboardInput is used internally by genqlient
type __createDashboardInput struct {
	Input CreateDashboardInput `json:"input"`
}

// GetInput returns __createDashboardInput.Input, and is useful for accessing the field via an interface.
func (v *__createDashboardInput) GetInput() CreateDashboardInput { return v.Input }

// __createNotificationInput is used internally by genqlient
type __createNotificationInput struct {
	Configuration CreateNotificationServiceConfigurationInput `json:"configuration"`
}

// GetConfiguration returns __createNotificationInput.Configuration, and is useful for accessing the field via an interface.
func (v *__createNotificationInput) GetConfiguration() CreateNotificationServiceConfigurationInput {
	return v.Configuration
}

// __createWebsiteMutationInput is used internally by genqlient
type __createWebsiteMutationInput struct {
	Input CreateWebsiteInput `json:"input"`
}

// GetInput returns __createWebsiteMutationInput.Input, and is useful for accessing the field via an interface.
func (v *__createWebsiteMutationInput) GetInput() CreateWebsiteInput { return v.Input }

// __deleteAlertDefinitionInput is used internally by genqlient
type __deleteAlertDefinitionInput struct {
	DeleteAlertDefinitionId string `json:"deleteAlertDefinitionId"`
}

// GetDeleteAlertDefinitionId returns __deleteAlertDefinitionInput.DeleteAlertDefinitionId, and is useful for accessing the field via an interface.
func (v *__deleteAlertDefinitionInput) GetDeleteAlertDefinitionId() string {
	return v.DeleteAlertDefinitionId
}

// __deleteDashboardInput is used internally by genqlient
type __deleteDashboardInput struct {
	Input DeleteDashboardInput `json:"input"`
}

// GetInput returns __deleteDashboardInput.Input, and is useful for accessing the field via an interface.
func (v *__deleteDashboardInput) GetInput() DeleteDashboardInput { return v.Input }

// __deleteNotificationInput is used internally by genqlient
type __deleteNotificationInput struct {
	Input DeleteNotificationServiceConfigurationInput `json:"input"`
}

// GetInput returns __deleteNotificationInput.Input, and is useful for accessing the field via an interface.
func (v *__deleteNotificationInput) GetInput() DeleteNotificationServiceConfigurationInput {
	return v.Input
}

// __deleteWebsiteMutationInput is used internally by genqlient
type __deleteWebsiteMutationInput struct {
	Input DeleteWebsiteInput `json:"input"`
}

// GetInput returns __deleteWebsiteMutationInput.Input, and is useful for accessing the field via an interface.
func (v *__deleteWebsiteMutationInput) GetInput() DeleteWebsiteInput { return v.Input }

// __getAlertDefinitionsInput is used internally by genqlient
type __getAlertDefinitionsInput struct {
	Filter AlertFilterInput `json:"filter"`
	Paging *PagingInput     `json:"paging"`
	SortBy *SortInput       `json:"sortBy"`
}

// GetFilter returns __getAlertDefinitionsInput.Filter, and is useful for accessing the field via an interface.
func (v *__getAlertDefinitionsInput) GetFilter() AlertFilterInput { return v.Filter }

// GetPaging returns __getAlertDefinitionsInput.Paging, and is useful for accessing the field via an interface.
func (v *__getAlertDefinitionsInput) GetPaging() *PagingInput { return v.Paging }

// GetSortBy returns __getAlertDefinitionsInput.SortBy, and is useful for accessing the field via an interface.
func (v *__getAlertDefinitionsInput) GetSortBy() *SortInput { return v.SortBy }

// __getDashboardByIdInput is used internally by genqlient
type __getDashboardByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __getDashboardByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__getDashboardByIdInput) GetId() string { return v.Id }

// __getNotificationInput is used internally by genqlient
type __getNotificationInput struct {
	ConfigurationId   string `json:"configurationId"`
	ConfigurationType string `json:"configurationType"`
}

// GetConfigurationId returns __getNotificationInput.ConfigurationId, and is useful for accessing the field via an interface.
func (v *__getNotificationInput) GetConfigurationId() string { return v.ConfigurationId }

// GetConfigurationType returns __getNotificationInput.ConfigurationType, and is useful for accessing the field via an interface.
func (v *__getNotificationInput) GetConfigurationType() string { return v.ConfigurationType }

// __getWebsiteByIdInput is used internally by genqlient
type __getWebsiteByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __getWebsiteByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__getWebsiteByIdInput) GetId() string { return v.Id }

// __updateAlertDefinitionInput is used internally by genqlient
type __updateAlertDefinitionInput struct {
	Definition              AlertDefinitionInput `json:"definition"`
	UpdateAlertDefinitionId string               `json:"updateAlertDefinitionId"`
}

// GetDefinition returns __updateAlertDefinitionInput.Definition, and is useful for accessing the field via an interface.
func (v *__updateAlertDefinitionInput) GetDefinition() AlertDefinitionInput { return v.Definition }

// GetUpdateAlertDefinitionId returns __updateAlertDefinitionInput.UpdateAlertDefinitionId, and is useful for accessing the field via an interface.
func (v *__updateAlertDefinitionInput) GetUpdateAlertDefinitionId() string {
	return v.UpdateAlertDefinitionId
}

// __updateDashboardInput is used internally by genqlient
type __updateDashboardInput struct {
	Input UpdateDashboardInput `json:"input"`
}

// GetInput returns __updateDashboardInput.Input, and is useful for accessing the field via an interface.
func (v *__updateDashboardInput) GetInput() UpdateDashboardInput { return v.Input }

// __updateNotificationInput is used internally by genqlient
type __updateNotificationInput struct {
	Configuration UpdateNotificationServiceConfigurationInput `json:"configuration"`
}

// GetConfiguration returns __updateNotificationInput.Configuration, and is useful for accessing the field via an interface.
func (v *__updateNotificationInput) GetConfiguration() UpdateNotificationServiceConfigurationInput {
	return v.Configuration
}

// __updateWebsiteMutationInput is used internally by genqlient
type __updateWebsiteMutationInput struct {
	Input UpdateWebsiteInput `json:"input"`
}

// GetInput returns __updateWebsiteMutationInput.Input, and is useful for accessing the field via an interface.
func (v *__updateWebsiteMutationInput) GetInput() UpdateWebsiteInput { return v.Input }

// createAlertDefinitionAlertMutations includes the requested fields of the GraphQL type AlertMutations.
type createAlertDefinitionAlertMutations struct {
	// Creates a new Alert definition and returns it on success, or null on error.
	CreateAlertDefinition *createAlertDefinitionAlertMutationsCreateAlertDefinition `json:"createAlertDefinition"`
}

// GetCreateAlertDefinition returns createAlertDefinitionAlertMutations.CreateAlertDefinition, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutations) GetCreateAlertDefinition() *createAlertDefinitionAlertMutationsCreateAlertDefinition {
	return v.CreateAlertDefinition
}

// createAlertDefinitionAlertMutationsCreateAlertDefinition includes the requested fields of the GraphQL type AlertDefinition.
// The GraphQL type's documentation follows.
//
// Alert definition object.
type createAlertDefinitionAlertMutationsCreateAlertDefinition struct {
	// Alert definition actions (notifications) to be triggered in a case of a new active alert, or when active alert
	// returns to normal.
	Actions []createAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction `json:"actions"`
	// Indication whether to send a notification when active alert returns to normal.
	TriggerResetActions bool `json:"triggerResetActions"`
	// Alert definition condition type.
	ConditionType ConditionType `json:"conditionType"`
	// Ordered list of condition nodes representing the flattened condition tree. The first item is the tree root.
	FlatCondition []createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression `json:"flatCondition"`
	// Alert definition description.
	Description *string `json:"description"`
	// Indication whether the Alert definition is being evaluated.
	Enabled bool `json:"enabled"`
	// Alert definition ID (in the UUID format).
	Id string `json:"id"`
	// Alert definition name.
	Name string `json:"name"`
	// Organization ID where the Alert definition was created.
	OrganizationId string `json:"organizationId"`
	// Alert definition severity.
	Severity AlertSeverity `json:"severity"`
	// Indication whether the Alert definition is triggered (i.e. if there is at least one active alert instance).
	Triggered bool `json:"triggered"`
	// Timestamp (in the ISO-8601 date and time format in UTC) indicating when the Alert definition was triggered
	// (*null* if the Alert definition is currently not triggered).
	TriggeredTime *string `json:"triggeredTime"`
	// Entity types targeted by the Alert definition.
	TargetEntityTypes []string `json:"targetEntityTypes"`
	// Information if notifications for the Alert definition are muted (suppressed).
	MuteInfo createAlertDefinitionAlertMutationsCreateAlertDefinitionMuteInfo `json:"muteInfo"`
	// Alert definition creator ID.
	UserId string `json:"userId"`
}

// GetActions returns createAlertDefinitionAlertMutationsCreateAlertDefinition.Actions, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetActions() []createAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction {
	return v.Actions
}

// GetTriggerResetActions returns createAlertDefinitionAlertMutationsCreateAlertDefinition.TriggerResetActions, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetTriggerResetActions() bool {
	return v.TriggerResetActions
}

// GetConditionType returns createAlertDefinitionAlertMutationsCreateAlertDefinition.ConditionType, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetConditionType() ConditionType {
	return v.ConditionType
}

// GetFlatCondition returns createAlertDefinitionAlertMutationsCreateAlertDefinition.FlatCondition, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetFlatCondition() []createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression {
	return v.FlatCondition
}

// GetDescription returns createAlertDefinitionAlertMutationsCreateAlertDefinition.Description, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetDescription() *string {
	return v.Description
}

// GetEnabled returns createAlertDefinitionAlertMutationsCreateAlertDefinition.Enabled, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetEnabled() bool {
	return v.Enabled
}

// GetId returns createAlertDefinitionAlertMutationsCreateAlertDefinition.Id, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetId() string { return v.Id }

// GetName returns createAlertDefinitionAlertMutationsCreateAlertDefinition.Name, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetName() string { return v.Name }

// GetOrganizationId returns createAlertDefinitionAlertMutationsCreateAlertDefinition.OrganizationId, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetOrganizationId() string {
	return v.OrganizationId
}

// GetSeverity returns createAlertDefinitionAlertMutationsCreateAlertDefinition.Severity, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetSeverity() AlertSeverity {
	return v.Severity
}

// GetTriggered returns createAlertDefinitionAlertMutationsCreateAlertDefinition.Triggered, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetTriggered() bool {
	return v.Triggered
}

// GetTriggeredTime returns createAlertDefinitionAlertMutationsCreateAlertDefinition.TriggeredTime, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetTriggeredTime() *string {
	return v.TriggeredTime
}

// GetTargetEntityTypes returns createAlertDefinitionAlertMutationsCreateAlertDefinition.TargetEntityTypes, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetTargetEntityTypes() []string {
	return v.TargetEntityTypes
}

// GetMuteInfo returns createAlertDefinitionAlertMutationsCreateAlertDefinition.MuteInfo, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetMuteInfo() createAlertDefinitionAlertMutationsCreateAlertDefinitionMuteInfo {
	return v.MuteInfo
}

// GetUserId returns createAlertDefinitionAlertMutationsCreateAlertDefinition.UserId, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinition) GetUserId() string {
	return v.UserId
}

// createAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction includes the requested fields of the GraphQL type AlertAction.
// The GraphQL type's documentation follows.
//
// Alert definition action object. It describes which notifications of a given type shall be triggered in a case of a new
// active alert, or when active alert returns to normal.
type createAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction struct {
	// Notification configuration IDs.
	ConfigurationIds []string `json:"configurationIds"`
	// Notification service type (email, MS Teams, Slack, webhook, ...).
	Type string `json:"type"`
}

// GetConfigurationIds returns createAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction) GetConfigurationIds() []string {
	return v.ConfigurationIds
}

// GetType returns createAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction.Type, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction) GetType() string {
	return v.Type
}

// createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression includes the requested fields of the GraphQL type FlatAlertConditionExpression.
type createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression struct {
	// Alert Condition Expression Tree Node ID
	Id string `json:"id"`
	// List of named child condition node IDs.
	Links []createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks `json:"links"`
	// Ordered list of expression nodes representing the flatten tree.
	// The first item is the tree root with named links using `operands`.
	Value *createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode `json:"value"`
}

// GetId returns createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression.Id, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression) GetId() string {
	return v.Id
}

// GetLinks returns createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression.Links, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression) GetLinks() []createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks {
	return v.Links
}

// GetValue returns createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression.Value, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression) GetValue() *createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode {
	return v.Value
}

// createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks includes the requested fields of the GraphQL type NamedLinks.
type createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks struct {
	// Name of the link
	Name string `json:"name"`
	// List of linked node IDs
	Values []string `json:"values"`
}

// GetName returns createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks.Name, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks) GetName() string {
	return v.Name
}

// GetValues returns createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks.Values, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks) GetValues() []string {
	return v.Values
}

// createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode includes the requested fields of the GraphQL type FlatAlertConditionNode.
// The GraphQL type's documentation follows.
//
// See https://swicloud.atlassian.net/wiki/spaces/NIT/pages/2700936948/Data+Format+for+storing+alerts.
type createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode struct {
	// Entity metric field for `metricField` nodes
	FieldName *string `json:"fieldName"`
	// Operator for combining operands. Supported values:
	// - For aggregationOperator: `COUNT`, `MIN`, `MAX`, `AVG`, `SUM`, `LAST`
	// - For binaryOperator: `=`, `!=`, `>`, `<`, `>=`, `<=`, `IN`
	// - For logicalOperator: `AND`, `OR`
	// - For unaryOperator: `!`
	// - For relationshipOperator: null
	Operator *string `json:"operator"`
	// Node (operator) type. Supported values:
	// - `aggregationOperator` (child of `binaryOperator`)
	// - `binaryOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `constantValue` (root, or child of `aggregationOperator`, `binaryOperator`)
	// - `logicalOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `attributeField` (child of `binaryOperator`)
	// - `metricField` (child of `binaryOperator`, `aggregationOperator`)
	// - `queryField` (child of `aggregationOperator`)
	// - `unaryOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `relationshipOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	Type string `json:"type"`
	// Query specification for `queryField` nodes.
	Query *string `json:"query"`
}

// GetFieldName returns createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.FieldName, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetFieldName() *string {
	return v.FieldName
}

// GetOperator returns createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Operator, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetOperator() *string {
	return v.Operator
}

// GetType returns createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Type, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetType() string {
	return v.Type
}

// GetQuery returns createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Query, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetQuery() *string {
	return v.Query
}

// createAlertDefinitionAlertMutationsCreateAlertDefinitionMuteInfo includes the requested fields of the GraphQL type AlertDefinitionMuteInfo.
// The GraphQL type's documentation follows.
//
// Information if notifications for the Alert definition are muted (suppressed).
type createAlertDefinitionAlertMutationsCreateAlertDefinitionMuteInfo struct {
	// Indication whether notifications for the Alert definition are muted.
	Muted bool `json:"muted"`
	// Timestamp (in the ISO-8601 date and time format in UTC) indicating until when notifications for the Alert definition
	// are muted. If not specified, notifications are muted 'until resolved', i.e. until all evaluations are set back to
	// the *OK* state (either automatically or using manual reset).
	Until *string `json:"until"`
}

// GetMuted returns createAlertDefinitionAlertMutationsCreateAlertDefinitionMuteInfo.Muted, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionMuteInfo) GetMuted() bool {
	return v.Muted
}

// GetUntil returns createAlertDefinitionAlertMutationsCreateAlertDefinitionMuteInfo.Until, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionAlertMutationsCreateAlertDefinitionMuteInfo) GetUntil() *string {
	return v.Until
}

// createAlertDefinitionResponse is returned by createAlertDefinition on success.
type createAlertDefinitionResponse struct {
	// Mutations related to Alerting.
	AlertMutations createAlertDefinitionAlertMutations `json:"alertMutations"`
}

// GetAlertMutations returns createAlertDefinitionResponse.AlertMutations, and is useful for accessing the field via an interface.
func (v *createAlertDefinitionResponse) GetAlertMutations() createAlertDefinitionAlertMutations {
	return v.AlertMutations
}

// createDashboardCreateDashboardCreateDashboardResponse includes the requested fields of the GraphQL type CreateDashboardResponse.
type createDashboardCreateDashboardCreateDashboardResponse struct {
	Code      string                                                          `json:"code"`
	Success   bool                                                            `json:"success"`
	Message   string                                                          `json:"message"`
	Dashboard *createDashboardCreateDashboardCreateDashboardResponseDashboard `json:"dashboard"`
}

// GetCode returns createDashboardCreateDashboardCreateDashboardResponse.Code, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponse) GetCode() string { return v.Code }

// GetSuccess returns createDashboardCreateDashboardCreateDashboardResponse.Success, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponse) GetSuccess() bool { return v.Success }

// GetMessage returns createDashboardCreateDashboardCreateDashboardResponse.Message, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponse) GetMessage() string { return v.Message }

// GetDashboard returns createDashboardCreateDashboardCreateDashboardResponse.Dashboard, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponse) GetDashboard() *createDashboardCreateDashboardCreateDashboardResponseDashboard {
	return v.Dashboard
}

// createDashboardCreateDashboardCreateDashboardResponseDashboard includes the requested fields of the GraphQL type Dashboard.
type createDashboardCreateDashboardCreateDashboardResponseDashboard struct {
	Id              string                                                                        `json:"id"`
	Name            string                                                                        `json:"name"`
	IsPrivate       *bool                                                                         `json:"isPrivate"`
	SystemReference *string                                                                       `json:"systemReference"`
	CreatedAt       time.Time                                                                     `json:"createdAt"`
	UpdatedAt       time.Time                                                                     `json:"updatedAt"`
	Category        *createDashboardCreateDashboardCreateDashboardResponseDashboardCategory       `json:"category"`
	Owner           *createDashboardCreateDashboardCreateDashboardResponseDashboardOwner          `json:"owner"`
	Widgets         []createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget `json:"widgets"`
	Layout          []createDashboardCreateDashboardCreateDashboardResponseDashboardLayout        `json:"layout"`
}

// GetId returns createDashboardCreateDashboardCreateDashboardResponseDashboard.Id, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetId() string { return v.Id }

// GetName returns createDashboardCreateDashboardCreateDashboardResponseDashboard.Name, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetName() string {
	return v.Name
}

// GetIsPrivate returns createDashboardCreateDashboardCreateDashboardResponseDashboard.IsPrivate, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetIsPrivate() *bool {
	return v.IsPrivate
}

// GetSystemReference returns createDashboardCreateDashboardCreateDashboardResponseDashboard.SystemReference, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetSystemReference() *string {
	return v.SystemReference
}

// GetCreatedAt returns createDashboardCreateDashboardCreateDashboardResponseDashboard.CreatedAt, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetUpdatedAt returns createDashboardCreateDashboardCreateDashboardResponseDashboard.UpdatedAt, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetUpdatedAt() time.Time {
	return v.UpdatedAt
}

// GetCategory returns createDashboardCreateDashboardCreateDashboardResponseDashboard.Category, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetCategory() *createDashboardCreateDashboardCreateDashboardResponseDashboardCategory {
	return v.Category
}

// GetOwner returns createDashboardCreateDashboardCreateDashboardResponseDashboard.Owner, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetOwner() *createDashboardCreateDashboardCreateDashboardResponseDashboardOwner {
	return v.Owner
}

// GetWidgets returns createDashboardCreateDashboardCreateDashboardResponseDashboard.Widgets, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetWidgets() []createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget {
	return v.Widgets
}

// GetLayout returns createDashboardCreateDashboardCreateDashboardResponseDashboard.Layout, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetLayout() []createDashboardCreateDashboardCreateDashboardResponseDashboardLayout {
	return v.Layout
}

// createDashboardCreateDashboardCreateDashboardResponseDashboardCategory includes the requested fields of the GraphQL type DashboardCategory.
type createDashboardCreateDashboardCreateDashboardResponseDashboardCategory struct {
	Id        string                                                                       `json:"id"`
	Name      string                                                                       `json:"name"`
	Type      string                                                                       `json:"type"`
	Owner     *createDashboardCreateDashboardCreateDashboardResponseDashboardCategoryOwner `json:"owner"`
	CreatedAt time.Time                                                                    `json:"createdAt"`
	UpdatedAt time.Time                                                                    `json:"updatedAt"`
}

// GetId returns createDashboardCreateDashboardCreateDashboardResponseDashboardCategory.Id, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardCategory) GetId() string {
	return v.Id
}

// GetName returns createDashboardCreateDashboardCreateDashboardResponseDashboardCategory.Name, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardCategory) GetName() string {
	return v.Name
}

// GetType returns createDashboardCreateDashboardCreateDashboardResponseDashboardCategory.Type, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardCategory) GetType() string {
	return v.Type
}

// GetOwner returns createDashboardCreateDashboardCreateDashboardResponseDashboardCategory.Owner, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardCategory) GetOwner() *createDashboardCreateDashboardCreateDashboardResponseDashboardCategoryOwner {
	return v.Owner
}

// GetCreatedAt returns createDashboardCreateDashboardCreateDashboardResponseDashboardCategory.CreatedAt, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardCategory) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetUpdatedAt returns createDashboardCreateDashboardCreateDashboardResponseDashboardCategory.UpdatedAt, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardCategory) GetUpdatedAt() time.Time {
	return v.UpdatedAt
}

// createDashboardCreateDashboardCreateDashboardResponseDashboardCategoryOwner includes the requested fields of the GraphQL type CategoryOwner.
type createDashboardCreateDashboardCreateDashboardResponseDashboardCategoryOwner struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns createDashboardCreateDashboardCreateDashboardResponseDashboardCategoryOwner.Id, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardCategoryOwner) GetId() string {
	return v.Id
}

// GetName returns createDashboardCreateDashboardCreateDashboardResponseDashboardCategoryOwner.Name, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardCategoryOwner) GetName() string {
	return v.Name
}

// createDashboardCreateDashboardCreateDashboardResponseDashboardLayout includes the requested fields of the GraphQL type Layout.
type createDashboardCreateDashboardCreateDashboardResponseDashboardLayout struct {
	Id     string `json:"id"`
	X      int    `json:"x"`
	Y      int    `json:"y"`
	Height int    `json:"height"`
	Width  int    `json:"width"`
}

// GetId returns createDashboardCreateDashboardCreateDashboardResponseDashboardLayout.Id, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardLayout) GetId() string {
	return v.Id
}

// GetX returns createDashboardCreateDashboardCreateDashboardResponseDashboardLayout.X, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardLayout) GetX() int { return v.X }

// GetY returns createDashboardCreateDashboardCreateDashboardResponseDashboardLayout.Y, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardLayout) GetY() int { return v.Y }

// GetHeight returns createDashboardCreateDashboardCreateDashboardResponseDashboardLayout.Height, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardLayout) GetHeight() int {
	return v.Height
}

// GetWidth returns createDashboardCreateDashboardCreateDashboardResponseDashboardLayout.Width, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardLayout) GetWidth() int {
	return v.Width
}

// createDashboardCreateDashboardCreateDashboardResponseDashboardOwner includes the requested fields of the GraphQL type DashboardOwner.
type createDashboardCreateDashboardCreateDashboardResponseDashboardOwner struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns createDashboardCreateDashboardCreateDashboardResponseDashboardOwner.Id, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardOwner) GetId() string {
	return v.Id
}

// GetName returns createDashboardCreateDashboardCreateDashboardResponseDashboardOwner.Name, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardOwner) GetName() string {
	return v.Name
}

// createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget includes the requested fields of the GraphQL type Widget.
type createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget struct {
	Id         string `json:"id"`
	Type       string `json:"type"`
	Properties *any   `json:"properties"`
}

// GetId returns createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget.Id, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget) GetId() string {
	return v.Id
}

// GetType returns createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget.Type, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget) GetType() string {
	return v.Type
}

// GetProperties returns createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget.Properties, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget) GetProperties() *any {
	return v.Properties
}

// createDashboardResponse is returned by createDashboard on success.
type createDashboardResponse struct {
	CreateDashboard createDashboardCreateDashboardCreateDashboardResponse `json:"createDashboard"`
}

// GetCreateDashboard returns createDashboardResponse.CreateDashboard, and is useful for accessing the field via an interface.
func (v *createDashboardResponse) GetCreateDashboard() createDashboardCreateDashboardCreateDashboardResponse {
	return v.CreateDashboard
}

// createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse includes the requested fields of the GraphQL type CreateNotificationServiceConfigurationResponse.
type createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse struct {
	Code          string                                                                                                                                  `json:"code"`
	Success       bool                                                                                                                                    `json:"success"`
	Message       string                                                                                                                                  `json:"message"`
	Configuration *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService `json:"configuration"`
}

// GetCode returns createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse.Code, and is useful for accessing the field via an interface.
func (v *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse) GetCode() string {
	return v.Code
}

// GetSuccess returns createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse.Success, and is useful for accessing the field via an interface.
func (v *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse) GetSuccess() bool {
	return v.Success
}

// GetMessage returns createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse.Message, and is useful for accessing the field via an interface.
func (v *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse) GetMessage() string {
	return v.Message
}

// GetConfiguration returns createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse.Configuration, and is useful for accessing the field via an interface.
func (v *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse) GetConfiguration() *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService {
	return v.Configuration
}

// createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService includes the requested fields of the GraphQL type NotificationService.
type createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService struct {
	// The ID of the NotificationService.
	Id string `json:"id"`
	// The type of the NotificationService.
	Type string `json:"type"`
	// The title of the NotificationService.
	Title string `json:"title"`
	// The settings of the NotificationService.
	Settings *any `json:"settings"`
	// The created time of the NotificationService.
	CreatedAt time.Time `json:"createdAt"`
	// The createdBy user ID of the NotificationService.
	CreatedBy string `json:"createdBy"`
	// The description of the NotificationService.
	Description *string `json:"description"`
}

// GetId returns createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.Id, and is useful for accessing the field via an interface.
func (v *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetId() string {
	return v.Id
}

// GetType returns createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.Type, and is useful for accessing the field via an interface.
func (v *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetType() string {
	return v.Type
}

// GetTitle returns createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.Title, and is useful for accessing the field via an interface.
func (v *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetTitle() string {
	return v.Title
}

// GetSettings returns createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.Settings, and is useful for accessing the field via an interface.
func (v *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetSettings() *any {
	return v.Settings
}

// GetCreatedAt returns createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.CreatedAt, and is useful for accessing the field via an interface.
func (v *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetCreatedBy returns createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.CreatedBy, and is useful for accessing the field via an interface.
func (v *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetCreatedBy() string {
	return v.CreatedBy
}

// GetDescription returns createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.Description, and is useful for accessing the field via an interface.
func (v *createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetDescription() *string {
	return v.Description
}

// createNotificationResponse is returned by createNotification on success.
type createNotificationResponse struct {
	CreateNotificationServiceConfiguration createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse `json:"createNotificationServiceConfiguration"`
}

// GetCreateNotificationServiceConfiguration returns createNotificationResponse.CreateNotificationServiceConfiguration, and is useful for accessing the field via an interface.
func (v *createNotificationResponse) GetCreateNotificationServiceConfiguration() createNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse {
	return v.CreateNotificationServiceConfiguration
}

// createWebsiteMutationDemDemMutations includes the requested fields of the GraphQL type DemMutations.
// The GraphQL type's documentation follows.
//
// Mutations related to Digital Experience Monitoring (DEM).
type createWebsiteMutationDemDemMutations struct {
	CreateWebsite createWebsiteMutationDemDemMutationsCreateWebsiteCreateWebsiteSuccess `json:"createWebsite"`
}

// GetCreateWebsite returns createWebsiteMutationDemDemMutations.CreateWebsite, and is useful for accessing the field via an interface.
func (v *createWebsiteMutationDemDemMutations) GetCreateWebsite() createWebsiteMutationDemDemMutationsCreateWebsiteCreateWebsiteSuccess {
	return v.CreateWebsite
}

// createWebsiteMutationDemDemMutationsCreateWebsiteCreateWebsiteSuccess includes the requested fields of the GraphQL type CreateWebsiteSuccess.
type createWebsiteMutationDemDemMutationsCreateWebsiteCreateWebsiteSuccess struct {
	// The id of the created website.
	Id string `json:"id"`
}

// GetId returns createWebsiteMutationDemDemMutationsCreateWebsiteCreateWebsiteSuccess.Id, and is useful for accessing the field via an interface.
func (v *createWebsiteMutationDemDemMutationsCreateWebsiteCreateWebsiteSuccess) GetId() string {
	return v.Id
}

// createWebsiteMutationResponse is returned by createWebsiteMutation on success.
type createWebsiteMutationResponse struct {
	Dem createWebsiteMutationDemDemMutations `json:"dem"`
}

// GetDem returns createWebsiteMutationResponse.Dem, and is useful for accessing the field via an interface.
func (v *createWebsiteMutationResponse) GetDem() createWebsiteMutationDemDemMutations { return v.Dem }

// deleteAlertDefinitionAlertMutations includes the requested fields of the GraphQL type AlertMutations.
type deleteAlertDefinitionAlertMutations struct {
	// Deletes an Alert definition by ID and returns the ID on success, or null when no such Alert definition exists.
	DeleteAlertDefinition *string `json:"deleteAlertDefinition"`
}

// GetDeleteAlertDefinition returns deleteAlertDefinitionAlertMutations.DeleteAlertDefinition, and is useful for accessing the field via an interface.
func (v *deleteAlertDefinitionAlertMutations) GetDeleteAlertDefinition() *string {
	return v.DeleteAlertDefinition
}

// deleteAlertDefinitionResponse is returned by deleteAlertDefinition on success.
type deleteAlertDefinitionResponse struct {
	// Mutations related to Alerting.
	AlertMutations deleteAlertDefinitionAlertMutations `json:"alertMutations"`
}

// GetAlertMutations returns deleteAlertDefinitionResponse.AlertMutations, and is useful for accessing the field via an interface.
func (v *deleteAlertDefinitionResponse) GetAlertMutations() deleteAlertDefinitionAlertMutations {
	return v.AlertMutations
}

// deleteDashboardDeleteDashboardDeleteDashboardResponse includes the requested fields of the GraphQL type DeleteDashboardResponse.
type deleteDashboardDeleteDashboardDeleteDashboardResponse struct {
	Code    string `json:"code"`
	Success bool   `json:"success"`
	Message string `json:"message"`
}

// GetCode returns deleteDashboardDeleteDashboardDeleteDashboardResponse.Code, and is useful for accessing the field via an interface.
func (v *deleteDashboardDeleteDashboardDeleteDashboardResponse) GetCode() string { return v.Code }

// GetSuccess returns deleteDashboardDeleteDashboardDeleteDashboardResponse.Success, and is useful for accessing the field via an interface.
func (v *deleteDashboardDeleteDashboardDeleteDashboardResponse) GetSuccess() bool { return v.Success }

// GetMessage returns deleteDashboardDeleteDashboardDeleteDashboardResponse.Message, and is useful for accessing the field via an interface.
func (v *deleteDashboardDeleteDashboardDeleteDashboardResponse) GetMessage() string { return v.Message }

// deleteDashboardResponse is returned by deleteDashboard on success.
type deleteDashboardResponse struct {
	DeleteDashboard deleteDashboardDeleteDashboardDeleteDashboardResponse `json:"deleteDashboard"`
}

// GetDeleteDashboard returns deleteDashboardResponse.DeleteDashboard, and is useful for accessing the field via an interface.
func (v *deleteDashboardResponse) GetDeleteDashboard() deleteDashboardDeleteDashboardDeleteDashboardResponse {
	return v.DeleteDashboard
}

// deleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse includes the requested fields of the GraphQL type DeleteNotificationServiceConfigurationResponse.
type deleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse struct {
	Success bool   `json:"success"`
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetSuccess returns deleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse.Success, and is useful for accessing the field via an interface.
func (v *deleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse) GetSuccess() bool {
	return v.Success
}

// GetCode returns deleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse.Code, and is useful for accessing the field via an interface.
func (v *deleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse) GetCode() string {
	return v.Code
}

// GetMessage returns deleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse.Message, and is useful for accessing the field via an interface.
func (v *deleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse) GetMessage() string {
	return v.Message
}

// deleteNotificationResponse is returned by deleteNotification on success.
type deleteNotificationResponse struct {
	DeleteNotificationServiceConfiguration *deleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse `json:"deleteNotificationServiceConfiguration"`
}

// GetDeleteNotificationServiceConfiguration returns deleteNotificationResponse.DeleteNotificationServiceConfiguration, and is useful for accessing the field via an interface.
func (v *deleteNotificationResponse) GetDeleteNotificationServiceConfiguration() *deleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse {
	return v.DeleteNotificationServiceConfiguration
}

// deleteWebsiteMutationDemDemMutations includes the requested fields of the GraphQL type DemMutations.
// The GraphQL type's documentation follows.
//
// Mutations related to Digital Experience Monitoring (DEM).
type deleteWebsiteMutationDemDemMutations struct {
	DeleteWebsite deleteWebsiteMutationDemDemMutationsDeleteWebsiteDeleteWebsiteSuccess `json:"deleteWebsite"`
}

// GetDeleteWebsite returns deleteWebsiteMutationDemDemMutations.DeleteWebsite, and is useful for accessing the field via an interface.
func (v *deleteWebsiteMutationDemDemMutations) GetDeleteWebsite() deleteWebsiteMutationDemDemMutationsDeleteWebsiteDeleteWebsiteSuccess {
	return v.DeleteWebsite
}

// deleteWebsiteMutationDemDemMutationsDeleteWebsiteDeleteWebsiteSuccess includes the requested fields of the GraphQL type DeleteWebsiteSuccess.
type deleteWebsiteMutationDemDemMutationsDeleteWebsiteDeleteWebsiteSuccess struct {
	// The id of the deleted website.
	Id string `json:"id"`
}

// GetId returns deleteWebsiteMutationDemDemMutationsDeleteWebsiteDeleteWebsiteSuccess.Id, and is useful for accessing the field via an interface.
func (v *deleteWebsiteMutationDemDemMutationsDeleteWebsiteDeleteWebsiteSuccess) GetId() string {
	return v.Id
}

// deleteWebsiteMutationResponse is returned by deleteWebsiteMutation on success.
type deleteWebsiteMutationResponse struct {
	Dem deleteWebsiteMutationDemDemMutations `json:"dem"`
}

// GetDem returns deleteWebsiteMutationResponse.Dem, and is useful for accessing the field via an interface.
func (v *deleteWebsiteMutationResponse) GetDem() deleteWebsiteMutationDemDemMutations { return v.Dem }

// getAlertDefinitionsAlertQueries includes the requested fields of the GraphQL type AlertQueries.
type getAlertDefinitionsAlertQueries struct {
	// Returns all Alert definitions with given Filter, Paging and Sorting.
	// Filtering can be performed either using dedicated fields in the `filter` input, or using a generic `filter.filter`
	// field. The latter one can be also used to filter Alert definitions with no configured actions/condition evaluations
	// using `propertyName: "actions:`/`propertyName: "conditionEvaluations"` and 'operation: EXISTS'.
	AlertDefinitions getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult `json:"alertDefinitions"`
}

// GetAlertDefinitions returns getAlertDefinitionsAlertQueries.AlertDefinitions, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueries) GetAlertDefinitions() getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult {
	return v.AlertDefinitions
}

// getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult includes the requested fields of the GraphQL type AlertDefinitionsResult.
type getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult struct {
	// List of Alert definitions
	AlertDefinitions []getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition `json:"alertDefinitions"`
}

// GetAlertDefinitions returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult.AlertDefinitions, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult) GetAlertDefinitions() []getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition {
	return v.AlertDefinitions
}

// getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition includes the requested fields of the GraphQL type AlertDefinition.
// The GraphQL type's documentation follows.
//
// Alert definition object.
type getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition struct {
	// Alert definition actions (notifications) to be triggered in a case of a new active alert, or when active alert
	// returns to normal.
	Actions []getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction `json:"actions"`
	// Indication whether to send a notification when active alert returns to normal.
	TriggerResetActions bool `json:"triggerResetActions"`
	// Alert definition condition type.
	ConditionType ConditionType `json:"conditionType"`
	// Ordered list of condition nodes representing the flattened condition tree. The first item is the tree root.
	FlatCondition []getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression `json:"flatCondition"`
	// Alert definition description.
	Description *string `json:"description"`
	// Indication whether the Alert definition is being evaluated.
	Enabled bool `json:"enabled"`
	// Alert definition ID (in the UUID format).
	Id string `json:"id"`
	// Alert definition name.
	Name string `json:"name"`
	// Organization ID where the Alert definition was created.
	OrganizationId string `json:"organizationId"`
	// Alert definition severity.
	Severity AlertSeverity `json:"severity"`
	// Indication whether the Alert definition is triggered (i.e. if there is at least one active alert instance).
	Triggered bool `json:"triggered"`
	// Timestamp (in the ISO-8601 date and time format in UTC) indicating when the Alert definition was triggered
	// (*null* if the Alert definition is currently not triggered).
	TriggeredTime *string `json:"triggeredTime"`
	// Entity types targeted by the Alert definition.
	TargetEntityTypes []string `json:"targetEntityTypes"`
	// Information if notifications for the Alert definition are muted (suppressed).
	MuteInfo getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo `json:"muteInfo"`
	// Alert definition creator ID.
	UserId string `json:"userId"`
}

// GetActions returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Actions, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetActions() []getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction {
	return v.Actions
}

// GetTriggerResetActions returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.TriggerResetActions, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTriggerResetActions() bool {
	return v.TriggerResetActions
}

// GetConditionType returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.ConditionType, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetConditionType() ConditionType {
	return v.ConditionType
}

// GetFlatCondition returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.FlatCondition, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetFlatCondition() []getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression {
	return v.FlatCondition
}

// GetDescription returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Description, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetDescription() *string {
	return v.Description
}

// GetEnabled returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Enabled, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetEnabled() bool {
	return v.Enabled
}

// GetId returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Id, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetId() string {
	return v.Id
}

// GetName returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Name, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetName() string {
	return v.Name
}

// GetOrganizationId returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.OrganizationId, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetOrganizationId() string {
	return v.OrganizationId
}

// GetSeverity returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Severity, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetSeverity() AlertSeverity {
	return v.Severity
}

// GetTriggered returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Triggered, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTriggered() bool {
	return v.Triggered
}

// GetTriggeredTime returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.TriggeredTime, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTriggeredTime() *string {
	return v.TriggeredTime
}

// GetTargetEntityTypes returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.TargetEntityTypes, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTargetEntityTypes() []string {
	return v.TargetEntityTypes
}

// GetMuteInfo returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.MuteInfo, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetMuteInfo() getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo {
	return v.MuteInfo
}

// GetUserId returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.UserId, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetUserId() string {
	return v.UserId
}

// getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction includes the requested fields of the GraphQL type AlertAction.
// The GraphQL type's documentation follows.
//
// Alert definition action object. It describes which notifications of a given type shall be triggered in a case of a new
// active alert, or when active alert returns to normal.
type getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction struct {
	// Notification configuration IDs.
	ConfigurationIds []string `json:"configurationIds"`
	// Notification service type (email, MS Teams, Slack, webhook, ...).
	Type string `json:"type"`
}

// GetConfigurationIds returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction) GetConfigurationIds() []string {
	return v.ConfigurationIds
}

// GetType returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction.Type, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction) GetType() string {
	return v.Type
}

// getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression includes the requested fields of the GraphQL type FlatAlertConditionExpression.
type getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression struct {
	// Alert Condition Expression Tree Node ID
	Id string `json:"id"`
	// List of named child condition node IDs.
	Links []getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks `json:"links"`
	// Ordered list of expression nodes representing the flatten tree.
	// The first item is the tree root with named links using `operands`.
	Value *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode `json:"value"`
}

// GetId returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression.Id, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression) GetId() string {
	return v.Id
}

// GetLinks returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression.Links, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression) GetLinks() []getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks {
	return v.Links
}

// GetValue returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression.Value, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression) GetValue() *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode {
	return v.Value
}

// getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks includes the requested fields of the GraphQL type NamedLinks.
type getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks struct {
	// Name of the link
	Name string `json:"name"`
	// List of linked node IDs
	Values []string `json:"values"`
}

// GetName returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks.Name, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks) GetName() string {
	return v.Name
}

// GetValues returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks.Values, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks) GetValues() []string {
	return v.Values
}

// getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode includes the requested fields of the GraphQL type FlatAlertConditionNode.
// The GraphQL type's documentation follows.
//
// See https://swicloud.atlassian.net/wiki/spaces/NIT/pages/2700936948/Data+Format+for+storing+alerts.
type getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode struct {
	// Entity metric field for `metricField` nodes
	FieldName *string `json:"fieldName"`
	// Operator for combining operands. Supported values:
	// - For aggregationOperator: `COUNT`, `MIN`, `MAX`, `AVG`, `SUM`, `LAST`
	// - For binaryOperator: `=`, `!=`, `>`, `<`, `>=`, `<=`, `IN`
	// - For logicalOperator: `AND`, `OR`
	// - For unaryOperator: `!`
	// - For relationshipOperator: null
	Operator *string `json:"operator"`
	// Node (operator) type. Supported values:
	// - `aggregationOperator` (child of `binaryOperator`)
	// - `binaryOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `constantValue` (root, or child of `aggregationOperator`, `binaryOperator`)
	// - `logicalOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `attributeField` (child of `binaryOperator`)
	// - `metricField` (child of `binaryOperator`, `aggregationOperator`)
	// - `queryField` (child of `aggregationOperator`)
	// - `unaryOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `relationshipOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	Type string `json:"type"`
	// Query specification for `queryField` nodes.
	Query *string `json:"query"`
}

// GetFieldName returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.FieldName, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetFieldName() *string {
	return v.FieldName
}

// GetOperator returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Operator, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetOperator() *string {
	return v.Operator
}

// GetType returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Type, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetType() string {
	return v.Type
}

// GetQuery returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Query, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetQuery() *string {
	return v.Query
}

// getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo includes the requested fields of the GraphQL type AlertDefinitionMuteInfo.
// The GraphQL type's documentation follows.
//
// Information if notifications for the Alert definition are muted (suppressed).
type getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo struct {
	// Indication whether notifications for the Alert definition are muted.
	Muted bool `json:"muted"`
	// Timestamp (in the ISO-8601 date and time format in UTC) indicating until when notifications for the Alert definition
	// are muted. If not specified, notifications are muted 'until resolved', i.e. until all evaluations are set back to
	// the *OK* state (either automatically or using manual reset).
	Until *string `json:"until"`
}

// GetMuted returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo.Muted, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo) GetMuted() bool {
	return v.Muted
}

// GetUntil returns getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo.Until, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo) GetUntil() *string {
	return v.Until
}

// getAlertDefinitionsResponse is returned by getAlertDefinitions on success.
type getAlertDefinitionsResponse struct {
	// Queries related to Alerting.
	AlertQueries getAlertDefinitionsAlertQueries `json:"alertQueries"`
}

// GetAlertQueries returns getAlertDefinitionsResponse.AlertQueries, and is useful for accessing the field via an interface.
func (v *getAlertDefinitionsResponse) GetAlertQueries() getAlertDefinitionsAlertQueries {
	return v.AlertQueries
}

// getDashboardByIdDashboardsDashboardQueries includes the requested fields of the GraphQL type DashboardQueries.
type getDashboardByIdDashboardsDashboardQueries struct {
	ById *getDashboardByIdDashboardsDashboardQueriesByIdDashboard `json:"byId"`
}

// GetById returns getDashboardByIdDashboardsDashboardQueries.ById, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueries) GetById() *getDashboardByIdDashboardsDashboardQueriesByIdDashboard {
	return v.ById
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboard includes the requested fields of the GraphQL type Dashboard.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboard struct {
	Id              string                                                                 `json:"id"`
	Name            string                                                                 `json:"name"`
	IsPrivate       *bool                                                                  `json:"isPrivate"`
	SystemReference *string                                                                `json:"systemReference"`
	CreatedAt       time.Time                                                              `json:"createdAt"`
	UpdatedAt       time.Time                                                              `json:"updatedAt"`
	Category        *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory       `json:"category"`
	Owner           *getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner          `json:"owner"`
	Widgets         []getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget `json:"widgets"`
	Layout          []getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout        `json:"layout"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetId() string { return v.Id }

// GetName returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Name, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetName() string { return v.Name }

// GetIsPrivate returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.IsPrivate, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetIsPrivate() *bool {
	return v.IsPrivate
}

// GetSystemReference returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.SystemReference, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetSystemReference() *string {
	return v.SystemReference
}

// GetCreatedAt returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetUpdatedAt returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetUpdatedAt() time.Time {
	return v.UpdatedAt
}

// GetCategory returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Category, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetCategory() *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory {
	return v.Category
}

// GetOwner returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Owner, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetOwner() *getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner {
	return v.Owner
}

// GetWidgets returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Widgets, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetWidgets() []getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget {
	return v.Widgets
}

// GetLayout returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Layout, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetLayout() []getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout {
	return v.Layout
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory includes the requested fields of the GraphQL type DashboardCategory.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory struct {
	Id        string                                                                `json:"id"`
	Name      string                                                                `json:"name"`
	Type      string                                                                `json:"type"`
	Owner     *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner `json:"owner"`
	CreatedAt time.Time                                                             `json:"createdAt"`
	UpdatedAt time.Time                                                             `json:"updatedAt"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetId() string { return v.Id }

// GetName returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.Name, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetName() string {
	return v.Name
}

// GetType returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.Type, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetType() string {
	return v.Type
}

// GetOwner returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.Owner, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetOwner() *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner {
	return v.Owner
}

// GetCreatedAt returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetUpdatedAt returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetUpdatedAt() time.Time {
	return v.UpdatedAt
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner includes the requested fields of the GraphQL type CategoryOwner.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner) GetId() string {
	return v.Id
}

// GetName returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner.Name, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner) GetName() string {
	return v.Name
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout includes the requested fields of the GraphQL type Layout.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout struct {
	Id     string `json:"id"`
	X      int    `json:"x"`
	Y      int    `json:"y"`
	Height int    `json:"height"`
	Width  int    `json:"width"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout) GetId() string { return v.Id }

// GetX returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout.X, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout) GetX() int { return v.X }

// GetY returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout.Y, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout) GetY() int { return v.Y }

// GetHeight returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout.Height, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout) GetHeight() int {
	return v.Height
}

// GetWidth returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout.Width, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout) GetWidth() int {
	return v.Width
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner includes the requested fields of the GraphQL type DashboardOwner.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner) GetId() string { return v.Id }

// GetName returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner.Name, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner) GetName() string {
	return v.Name
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget includes the requested fields of the GraphQL type Widget.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget struct {
	Id         string `json:"id"`
	Type       string `json:"type"`
	Properties *any   `json:"properties"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget) GetId() string {
	return v.Id
}

// GetType returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget.Type, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget) GetType() string {
	return v.Type
}

// GetProperties returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget.Properties, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget) GetProperties() *any {
	return v.Properties
}

// getDashboardByIdResponse is returned by getDashboardById on success.
type getDashboardByIdResponse struct {
	Dashboards *getDashboardByIdDashboardsDashboardQueries `json:"dashboards"`
}

// GetDashboards returns getDashboardByIdResponse.Dashboards, and is useful for accessing the field via an interface.
func (v *getDashboardByIdResponse) GetDashboards() *getDashboardByIdDashboardsDashboardQueries {
	return v.Dashboards
}

// getNotificationResponse is returned by getNotification on success.
type getNotificationResponse struct {
	User getNotificationUserAuthenticatedUser `json:"user"`
}

// GetUser returns getNotificationResponse.User, and is useful for accessing the field via an interface.
func (v *getNotificationResponse) GetUser() getNotificationUserAuthenticatedUser { return v.User }

// getNotificationUserAuthenticatedUser includes the requested fields of the GraphQL type AuthenticatedUser.
type getNotificationUserAuthenticatedUser struct {
	CurrentOrganization getNotificationUserAuthenticatedUserCurrentOrganization `json:"currentOrganization"`
}

// GetCurrentOrganization returns getNotificationUserAuthenticatedUser.CurrentOrganization, and is useful for accessing the field via an interface.
func (v *getNotificationUserAuthenticatedUser) GetCurrentOrganization() getNotificationUserAuthenticatedUserCurrentOrganization {
	return v.CurrentOrganization
}

// getNotificationUserAuthenticatedUserCurrentOrganization includes the requested fields of the GraphQL type Organization.
type getNotificationUserAuthenticatedUserCurrentOrganization struct {
	NotificationServiceConfiguration getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService `json:"notificationServiceConfiguration"`
}

// GetNotificationServiceConfiguration returns getNotificationUserAuthenticatedUserCurrentOrganization.NotificationServiceConfiguration, and is useful for accessing the field via an interface.
func (v *getNotificationUserAuthenticatedUserCurrentOrganization) GetNotificationServiceConfiguration() getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService {
	return v.NotificationServiceConfiguration
}

// getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService includes the requested fields of the GraphQL type NotificationService.
type getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService struct {
	// The ID of the NotificationService.
	Id string `json:"id"`
	// The type of the NotificationService.
	Type string `json:"type"`
	// The title of the NotificationService.
	Title string `json:"title"`
	// The settings of the NotificationService.
	Settings *any `json:"settings"`
	// The created time of the NotificationService.
	CreatedAt time.Time `json:"createdAt"`
	// The createdBy user ID of the NotificationService.
	CreatedBy string `json:"createdBy"`
	// The description of the NotificationService.
	Description *string `json:"description"`
}

// GetId returns getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.Id, and is useful for accessing the field via an interface.
func (v *getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetId() string {
	return v.Id
}

// GetType returns getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.Type, and is useful for accessing the field via an interface.
func (v *getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetType() string {
	return v.Type
}

// GetTitle returns getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.Title, and is useful for accessing the field via an interface.
func (v *getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetTitle() string {
	return v.Title
}

// GetSettings returns getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.Settings, and is useful for accessing the field via an interface.
func (v *getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetSettings() *any {
	return v.Settings
}

// GetCreatedAt returns getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.CreatedAt, and is useful for accessing the field via an interface.
func (v *getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetCreatedBy returns getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.CreatedBy, and is useful for accessing the field via an interface.
func (v *getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetCreatedBy() string {
	return v.CreatedBy
}

// GetDescription returns getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.Description, and is useful for accessing the field via an interface.
func (v *getNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetDescription() *string {
	return v.Description
}

// getWebsiteByIdEntitiesEntityQueries includes the requested fields of the GraphQL type EntityQueries.
type getWebsiteByIdEntitiesEntityQueries struct {
	// Get Entity by ID. If "timeRange" argument is passed it set a "time context" for the whole query and override any "intervalSec" values in metric scalars
	// metric directives. If the "timeRange" is not defined the default "intervalSec" value from the schema is used.
	ById *getWebsiteByIdEntitiesEntityQueriesByIdEntity `json:"-"`
}

// GetById returns getWebsiteByIdEntitiesEntityQueries.ById, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueries) GetById() *getWebsiteByIdEntitiesEntityQueriesByIdEntity {
	return v.ById
}

func (v *getWebsiteByIdEntitiesEntityQueries) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getWebsiteByIdEntitiesEntityQueries
		ById json.RawMessage `json:"byId"`
		graphql.NoUnmarshalJSON
	}
	firstPass.getWebsiteByIdEntitiesEntityQueries = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.ById
		src := firstPass.ById
		if len(src) != 0 && string(src) != "null" {
			*dst = new(getWebsiteByIdEntitiesEntityQueriesByIdEntity)
			err = __unmarshalgetWebsiteByIdEntitiesEntityQueriesByIdEntity(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal getWebsiteByIdEntitiesEntityQueries.ById: %w", err)
			}
		}
	}
	return nil
}

type __premarshalgetWebsiteByIdEntitiesEntityQueries struct {
	ById json.RawMessage `json:"byId"`
}

func (v *getWebsiteByIdEntitiesEntityQueries) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getWebsiteByIdEntitiesEntityQueries) __premarshalJSON() (*__premarshalgetWebsiteByIdEntitiesEntityQueries, error) {
	var retval __premarshalgetWebsiteByIdEntitiesEntityQueries

	{

		dst := &retval.ById
		src := v.ById
		if src != nil {
			var err error
			*dst, err = __marshalgetWebsiteByIdEntitiesEntityQueriesByIdEntity(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal getWebsiteByIdEntitiesEntityQueries.ById: %w", err)
			}
		}
	}
	return &retval, nil
}

// getWebsiteByIdEntitiesEntityQueriesByIdApacheInstance includes the requested fields of the GraphQL type ApacheInstance.
type getWebsiteByIdEntitiesEntityQueriesByIdApacheInstance struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdApacheInstance.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdApacheInstance) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdApplication includes the requested fields of the GraphQL type Application.
// The GraphQL type's documentation follows.
//
// Entity represents Application from "Server and Application Monitor" in HCO (collected by Network Collector)
type getWebsiteByIdEntitiesEntityQueriesByIdApplication struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdApplication.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdApplication) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdApplicationComponent includes the requested fields of the GraphQL type ApplicationComponent.
// The GraphQL type's documentation follows.
//
// Application Component entity represents component of application from "Server and Application Monitor" in HCO (collected by Network Collector)
type getWebsiteByIdEntitiesEntityQueriesByIdApplicationComponent struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdApplicationComponent.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdApplicationComponent) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAsaRemoteAccessSession includes the requested fields of the GraphQL type AsaRemoteAccessSession.
// The GraphQL type's documentation follows.
//
// ASA Firewall RemoteAccessSession entity.
type getWebsiteByIdEntitiesEntityQueriesByIdAsaRemoteAccessSession struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAsaRemoteAccessSession.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAsaRemoteAccessSession) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAsaSiteToSiteTunnel includes the requested fields of the GraphQL type AsaSiteToSiteTunnel.
// The GraphQL type's documentation follows.
//
// ASA Firewall SiteToSiteTunnel entity
type getWebsiteByIdEntitiesEntityQueriesByIdAsaSiteToSiteTunnel struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAsaSiteToSiteTunnel.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAsaSiteToSiteTunnel) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsApiGateway includes the requested fields of the GraphQL type AwsApiGateway.
// The GraphQL type's documentation follows.
//
// AWS API GATEWAY
type getWebsiteByIdEntitiesEntityQueriesByIdAwsApiGateway struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsApiGateway.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsApiGateway) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsApplicationELB includes the requested fields of the GraphQL type AwsApplicationELB.
// The GraphQL type's documentation follows.
//
// AWS Application load balancer
type getWebsiteByIdEntitiesEntityQueriesByIdAwsApplicationELB struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsApplicationELB.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsApplicationELB) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraCluster includes the requested fields of the GraphQL type AwsAuroraCluster.
// The GraphQL type's documentation follows.
//
// AWS Aurora Cluster
type getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraCluster struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraCluster.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraCluster) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraInstance includes the requested fields of the GraphQL type AwsAuroraInstance.
// The GraphQL type's documentation follows.
//
// AWS Aurora Instance
type getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraInstance struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraInstance.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraInstance) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsAutoScalingGroup includes the requested fields of the GraphQL type AwsAutoScalingGroup.
// The GraphQL type's documentation follows.
//
// AWS Auto Scaling Group entity
type getWebsiteByIdEntitiesEntityQueriesByIdAwsAutoScalingGroup struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsAutoScalingGroup.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsAutoScalingGroup) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsCloudFrontDistribution includes the requested fields of the GraphQL type AwsCloudFrontDistribution.
// The GraphQL type's documentation follows.
//
// AWS CloudFront entity
type getWebsiteByIdEntitiesEntityQueriesByIdAwsCloudFrontDistribution struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsCloudFrontDistribution.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsCloudFrontDistribution) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsEBS includes the requested fields of the GraphQL type AwsEBS.
// The GraphQL type's documentation follows.
//
// EBS entity
type getWebsiteByIdEntitiesEntityQueriesByIdAwsEBS struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsEBS.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsEBS) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAwsEFS includes the requested fields of the GraphQL type AwsEFS.
// The GraphQL type's documentation follows.
//
// ElasticFileSystem
type getWebsiteByIdEntitiesEntityQueriesByIdAwsEFS struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsEFS.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsEFS) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAwsELB includes the requested fields of the GraphQL type AwsELB.
// The GraphQL type's documentation follows.
//
// AWS Elastic load balancer (Classic Load Balancer)
type getWebsiteByIdEntitiesEntityQueriesByIdAwsELB struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsELB.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsELB) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAwsElasticBeanstalkEnvironment includes the requested fields of the GraphQL type AwsElasticBeanstalkEnvironment.
// The GraphQL type's documentation follows.
//
// AwsElasticBeanstalkEnvironment entity
type getWebsiteByIdEntitiesEntityQueriesByIdAwsElasticBeanstalkEnvironment struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsElasticBeanstalkEnvironment.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsElasticBeanstalkEnvironment) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsFsx includes the requested fields of the GraphQL type AwsFsx.
// The GraphQL type's documentation follows.
//
// AWS FSx
type getWebsiteByIdEntitiesEntityQueriesByIdAwsFsx struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsFsx.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsFsx) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAwsLambda includes the requested fields of the GraphQL type AwsLambda.
// The GraphQL type's documentation follows.
//
// AWS Lambda Entity
type getWebsiteByIdEntitiesEntityQueriesByIdAwsLambda struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsLambda.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsLambda) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAwsNatGateway includes the requested fields of the GraphQL type AwsNatGateway.
// The GraphQL type's documentation follows.
//
// AWS NAT Gateway
type getWebsiteByIdEntitiesEntityQueriesByIdAwsNatGateway struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsNatGateway.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsNatGateway) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchCollection includes the requested fields of the GraphQL type AwsOpenSearchCollection.
// The GraphQL type's documentation follows.
//
// AWS Open Search Serverless Collection
type getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchCollection struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchCollection.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchCollection) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchDomain includes the requested fields of the GraphQL type AwsOpenSearchDomain.
// The GraphQL type's documentation follows.
//
// AWS OpenSearch Service Domain
type getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchDomain struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchDomain.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchDomain) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchIngestionPipeline includes the requested fields of the GraphQL type AwsOpenSearchIngestionPipeline.
// The GraphQL type's documentation follows.
//
// AWS Open Search Ingestion Pipeline
type getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchIngestionPipeline struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchIngestionPipeline.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchIngestionPipeline) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsRDS includes the requested fields of the GraphQL type AwsRDS.
// The GraphQL type's documentation follows.
//
// AWS RDS
type getWebsiteByIdEntitiesEntityQueriesByIdAwsRDS struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsRDS.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsRDS) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAwsS3 includes the requested fields of the GraphQL type AwsS3.
// The GraphQL type's documentation follows.
//
// AWS S3
type getWebsiteByIdEntitiesEntityQueriesByIdAwsS3 struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsS3.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsS3) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAwsSNSTopic includes the requested fields of the GraphQL type AwsSNSTopic.
// The GraphQL type's documentation follows.
//
// AWS SNS entities for Topic
type getWebsiteByIdEntitiesEntityQueriesByIdAwsSNSTopic struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsSNSTopic.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsSNSTopic) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAwsSQS includes the requested fields of the GraphQL type AwsSQS.
// The GraphQL type's documentation follows.
//
// AWS Simple Queue Service
type getWebsiteByIdEntitiesEntityQueriesByIdAwsSQS struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsSQS.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsSQS) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAwsTransferFamily includes the requested fields of the GraphQL type AwsTransferFamily.
// The GraphQL type's documentation follows.
//
// AWS Transfer Family
type getWebsiteByIdEntitiesEntityQueriesByIdAwsTransferFamily struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsTransferFamily.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsTransferFamily) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsTransitGateway includes the requested fields of the GraphQL type AwsTransitGateway.
// The GraphQL type's documentation follows.
//
// AWS Transit Gateway
type getWebsiteByIdEntitiesEntityQueriesByIdAwsTransitGateway struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsTransitGateway.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsTransitGateway) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAwsVPN includes the requested fields of the GraphQL type AwsVPN.
// The GraphQL type's documentation follows.
//
// AWS VPN (Virtual Private Network)
type getWebsiteByIdEntitiesEntityQueriesByIdAwsVPN struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAwsVPN.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsVPN) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAzureAppService includes the requested fields of the GraphQL type AzureAppService.
// The GraphQL type's documentation follows.
//
// Azure App Service
type getWebsiteByIdEntitiesEntityQueriesByIdAzureAppService struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureAppService.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureAppService) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAzureBlobStorage includes the requested fields of the GraphQL type AzureBlobStorage.
// The GraphQL type's documentation follows.
//
// Azure Blob Storage
type getWebsiteByIdEntitiesEntityQueriesByIdAzureBlobStorage struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureBlobStorage.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureBlobStorage) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAzureCdn includes the requested fields of the GraphQL type AzureCdn.
// The GraphQL type's documentation follows.
//
// Azure CDN entity
type getWebsiteByIdEntitiesEntityQueriesByIdAzureCdn struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureCdn.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureCdn) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAzureCosmosDb includes the requested fields of the GraphQL type AzureCosmosDb.
// The GraphQL type's documentation follows.
//
// Azure Cosmos DB
type getWebsiteByIdEntitiesEntityQueriesByIdAzureCosmosDb struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureCosmosDb.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureCosmosDb) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAzureDatabasesName includes the requested fields of the GraphQL type AzureDatabasesName.
// The GraphQL type's documentation follows.
//
// Add Entity description here
type getWebsiteByIdEntitiesEntityQueriesByIdAzureDatabasesName struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureDatabasesName.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureDatabasesName) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAzureEventHubs includes the requested fields of the GraphQL type AzureEventHubs.
// The GraphQL type's documentation follows.
//
// Azure Event Hubs entity
type getWebsiteByIdEntitiesEntityQueriesByIdAzureEventHubs struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureEventHubs.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureEventHubs) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAzureFiles includes the requested fields of the GraphQL type AzureFiles.
// The GraphQL type's documentation follows.
//
// AZURE FILES
type getWebsiteByIdEntitiesEntityQueriesByIdAzureFiles struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureFiles.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureFiles) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdAzureFrontDoor includes the requested fields of the GraphQL type AzureFrontDoor.
// The GraphQL type's documentation follows.
//
// Azure Front Door entity
type getWebsiteByIdEntitiesEntityQueriesByIdAzureFrontDoor struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureFrontDoor.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureFrontDoor) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAzureFunction includes the requested fields of the GraphQL type AzureFunction.
// The GraphQL type's documentation follows.
//
// Azure Function
type getWebsiteByIdEntitiesEntityQueriesByIdAzureFunction struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureFunction.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureFunction) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAzureKeyVault includes the requested fields of the GraphQL type AzureKeyVault.
// The GraphQL type's documentation follows.
//
// Azure Key Vault entity
type getWebsiteByIdEntitiesEntityQueriesByIdAzureKeyVault struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureKeyVault.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureKeyVault) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAzureLoadBalancer includes the requested fields of the GraphQL type AzureLoadBalancer.
// The GraphQL type's documentation follows.
//
// Azure LoadBalancer entity
type getWebsiteByIdEntitiesEntityQueriesByIdAzureLoadBalancer struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureLoadBalancer.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureLoadBalancer) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAzureServiceBus includes the requested fields of the GraphQL type AzureServiceBus.
// The GraphQL type's documentation follows.
//
// Azure Service Bus Entity
type getWebsiteByIdEntitiesEntityQueriesByIdAzureServiceBus struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureServiceBus.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureServiceBus) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAzureSqlDatabase includes the requested fields of the GraphQL type AzureSqlDatabase.
// The GraphQL type's documentation follows.
//
// Add Entity description here
type getWebsiteByIdEntitiesEntityQueriesByIdAzureSqlDatabase struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureSqlDatabase.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureSqlDatabase) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdAzureVirtualMachineScaleSet includes the requested fields of the GraphQL type AzureVirtualMachineScaleSet.
// The GraphQL type's documentation follows.
//
// Azure VirtualMachine ScaleSet
type getWebsiteByIdEntitiesEntityQueriesByIdAzureVirtualMachineScaleSet struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdAzureVirtualMachineScaleSet.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureVirtualMachineScaleSet) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdCloudAccount includes the requested fields of the GraphQL type CloudAccount.
// The GraphQL type's documentation follows.
//
// Cloud Account entity
type getWebsiteByIdEntitiesEntityQueriesByIdCloudAccount struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdCloudAccount.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdCloudAccount) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdContainer includes the requested fields of the GraphQL type Container.
// The GraphQL type's documentation follows.
//
// Container entity
type getWebsiteByIdEntitiesEntityQueriesByIdContainer struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdContainer.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdContainer) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdDatabaseInstance includes the requested fields of the GraphQL type DatabaseInstance.
type getWebsiteByIdEntitiesEntityQueriesByIdDatabaseInstance struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdDatabaseInstance.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdDatabaseInstance) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdDeviceVolume includes the requested fields of the GraphQL type DeviceVolume.
// The GraphQL type's documentation follows.
//
// DeviceVolume entity
type getWebsiteByIdEntitiesEntityQueriesByIdDeviceVolume struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdDeviceVolume.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdDeviceVolume) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdEntity includes the requested fields of the GraphQL interface Entity.
//
// getWebsiteByIdEntitiesEntityQueriesByIdEntity is implemented by the following types:
// getWebsiteByIdEntitiesEntityQueriesByIdApacheInstance
// getWebsiteByIdEntitiesEntityQueriesByIdApplication
// getWebsiteByIdEntitiesEntityQueriesByIdApplicationComponent
// getWebsiteByIdEntitiesEntityQueriesByIdAsaRemoteAccessSession
// getWebsiteByIdEntitiesEntityQueriesByIdAsaSiteToSiteTunnel
// getWebsiteByIdEntitiesEntityQueriesByIdAwsApiGateway
// getWebsiteByIdEntitiesEntityQueriesByIdAwsApplicationELB
// getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraCluster
// getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraInstance
// getWebsiteByIdEntitiesEntityQueriesByIdAwsAutoScalingGroup
// getWebsiteByIdEntitiesEntityQueriesByIdAwsCloudFrontDistribution
// getWebsiteByIdEntitiesEntityQueriesByIdAwsEBS
// getWebsiteByIdEntitiesEntityQueriesByIdAwsEFS
// getWebsiteByIdEntitiesEntityQueriesByIdAwsELB
// getWebsiteByIdEntitiesEntityQueriesByIdAwsElasticBeanstalkEnvironment
// getWebsiteByIdEntitiesEntityQueriesByIdAwsFsx
// getWebsiteByIdEntitiesEntityQueriesByIdAwsLambda
// getWebsiteByIdEntitiesEntityQueriesByIdAwsNatGateway
// getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchCollection
// getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchDomain
// getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchIngestionPipeline
// getWebsiteByIdEntitiesEntityQueriesByIdAwsRDS
// getWebsiteByIdEntitiesEntityQueriesByIdAwsS3
// getWebsiteByIdEntitiesEntityQueriesByIdAwsSNSTopic
// getWebsiteByIdEntitiesEntityQueriesByIdAwsSQS
// getWebsiteByIdEntitiesEntityQueriesByIdAwsTransferFamily
// getWebsiteByIdEntitiesEntityQueriesByIdAwsTransitGateway
// getWebsiteByIdEntitiesEntityQueriesByIdAwsVPN
// getWebsiteByIdEntitiesEntityQueriesByIdAzureAppService
// getWebsiteByIdEntitiesEntityQueriesByIdAzureBlobStorage
// getWebsiteByIdEntitiesEntityQueriesByIdAzureCdn
// getWebsiteByIdEntitiesEntityQueriesByIdAzureCosmosDb
// getWebsiteByIdEntitiesEntityQueriesByIdAzureDatabasesName
// getWebsiteByIdEntitiesEntityQueriesByIdAzureEventHubs
// getWebsiteByIdEntitiesEntityQueriesByIdAzureFiles
// getWebsiteByIdEntitiesEntityQueriesByIdAzureFrontDoor
// getWebsiteByIdEntitiesEntityQueriesByIdAzureFunction
// getWebsiteByIdEntitiesEntityQueriesByIdAzureKeyVault
// getWebsiteByIdEntitiesEntityQueriesByIdAzureLoadBalancer
// getWebsiteByIdEntitiesEntityQueriesByIdAzureServiceBus
// getWebsiteByIdEntitiesEntityQueriesByIdAzureSqlDatabase
// getWebsiteByIdEntitiesEntityQueriesByIdAzureVirtualMachineScaleSet
// getWebsiteByIdEntitiesEntityQueriesByIdCloudAccount
// getWebsiteByIdEntitiesEntityQueriesByIdContainer
// getWebsiteByIdEntitiesEntityQueriesByIdDatabaseInstance
// getWebsiteByIdEntitiesEntityQueriesByIdDeviceVolume
// getWebsiteByIdEntitiesEntityQueriesByIdEntityGroup
// getWebsiteByIdEntitiesEntityQueriesByIdF5GTMWideIP
// getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPool
// getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPoolMember
// getWebsiteByIdEntitiesEntityQueriesByIdF5LTMServer
// getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualIPAddress
// getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualServer
// getWebsiteByIdEntitiesEntityQueriesByIdF5SystemFailover
// getWebsiteByIdEntitiesEntityQueriesByIdF5SystemModule
// getWebsiteByIdEntitiesEntityQueriesByIdF5SystemVlan
// getWebsiteByIdEntitiesEntityQueriesByIdHAMember
// getWebsiteByIdEntitiesEntityQueriesByIdHAPool
// getWebsiteByIdEntitiesEntityQueriesByIdHardwareSensor
// getWebsiteByIdEntitiesEntityQueriesByIdHcoEngine
// getWebsiteByIdEntitiesEntityQueriesByIdHcoGroup
// getWebsiteByIdEntitiesEntityQueriesByIdHost
// getWebsiteByIdEntitiesEntityQueriesByIdIISWebServer
// getWebsiteByIdEntitiesEntityQueriesByIdIpAddress
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCluster
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesContainer
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCronJob
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDaemonSet
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDeployment
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesJob
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNamespace
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNode
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolume
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolumeClaim
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPod
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPodInstance
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesReplicaSet
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesService
// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesStatefulSet
// getWebsiteByIdEntitiesEntityQueriesByIdNetPathEndpoint
// getWebsiteByIdEntitiesEntityQueriesByIdNetworkDevice
// getWebsiteByIdEntitiesEntityQueriesByIdNetworkInterface
// getWebsiteByIdEntitiesEntityQueriesByIdNetworkShadowDevice
// getWebsiteByIdEntitiesEntityQueriesByIdNginxInstance
// getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoRemoteAccessSession
// getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoSiteToSiteTunnel
// getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPort
// getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortEndpoint
// getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortIpAddress
// getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortToEndpoint
// getWebsiteByIdEntitiesEntityQueriesByIdSdWanEdgeInterface
// getWebsiteByIdEntitiesEntityQueriesByIdSdWanTunnel
// getWebsiteByIdEntitiesEntityQueriesByIdService
// getWebsiteByIdEntitiesEntityQueriesByIdServiceInstance
// getWebsiteByIdEntitiesEntityQueriesByIdSyslogApplication
// getWebsiteByIdEntitiesEntityQueriesByIdSyslogHost
// getWebsiteByIdEntitiesEntityQueriesByIdThinAccessPoint
// getWebsiteByIdEntitiesEntityQueriesByIdTransaction
// getWebsiteByIdEntitiesEntityQueriesByIdUri
// getWebsiteByIdEntitiesEntityQueriesByIdVCenter
// getWebsiteByIdEntitiesEntityQueriesByIdVirtualCluster
// getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatacenter
// getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatastore
// getWebsiteByIdEntitiesEntityQueriesByIdVirtualHost
// getWebsiteByIdEntitiesEntityQueriesByIdVirtualMachine
// getWebsiteByIdEntitiesEntityQueriesByIdVirtualRoutingForwarding
// getWebsiteByIdEntitiesEntityQueriesByIdVlan
// getWebsiteByIdEntitiesEntityQueriesByIdVlanDevice
// getWebsiteByIdEntitiesEntityQueriesByIdVlanPortInterfaceMap
// getWebsiteByIdEntitiesEntityQueriesByIdWebsite
// getWebsiteByIdEntitiesEntityQueriesByIdWirelessClient
// getWebsiteByIdEntitiesEntityQueriesByIdWirelessInterface
// The GraphQL type's documentation follows.
//
// Base interface for all entities
type getWebsiteByIdEntitiesEntityQueriesByIdEntity interface {
	implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *getWebsiteByIdEntitiesEntityQueriesByIdApacheInstance) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdApplication) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdApplicationComponent) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAsaRemoteAccessSession) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAsaSiteToSiteTunnel) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsApiGateway) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsApplicationELB) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraCluster) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraInstance) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsAutoScalingGroup) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsCloudFrontDistribution) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsEBS) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsEFS) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsELB) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsElasticBeanstalkEnvironment) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsFsx) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsLambda) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsNatGateway) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchCollection) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchDomain) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchIngestionPipeline) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsRDS) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsS3) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsSNSTopic) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsSQS) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsTransferFamily) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsTransitGateway) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAwsVPN) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureAppService) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureBlobStorage) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureCdn) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureCosmosDb) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureDatabasesName) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureEventHubs) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureFiles) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureFrontDoor) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureFunction) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureKeyVault) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureLoadBalancer) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureServiceBus) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureSqlDatabase) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdAzureVirtualMachineScaleSet) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdCloudAccount) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdContainer) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdDatabaseInstance) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdDeviceVolume) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdEntityGroup) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5GTMWideIP) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPool) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPoolMember) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMServer) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualIPAddress) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualServer) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5SystemFailover) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5SystemModule) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5SystemVlan) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHAMember) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHAPool) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHardwareSensor) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHcoEngine) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHcoGroup) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHost) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdIISWebServer) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdIpAddress) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCluster) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesContainer) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCronJob) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDaemonSet) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDeployment) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesJob) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNamespace) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNode) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolume) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolumeClaim) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPod) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPodInstance) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesReplicaSet) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesService) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesStatefulSet) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdNetPathEndpoint) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdNetworkDevice) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdNetworkInterface) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdNetworkShadowDevice) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdNginxInstance) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoRemoteAccessSession) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoSiteToSiteTunnel) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPort) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortEndpoint) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortIpAddress) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortToEndpoint) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdSdWanEdgeInterface) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdSdWanTunnel) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdService) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdServiceInstance) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdSyslogApplication) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdSyslogHost) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdThinAccessPoint) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdTransaction) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdUri) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVCenter) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualCluster) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatacenter) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatastore) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualHost) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualMachine) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualRoutingForwarding) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVlan) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVlanDevice) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVlanPortInterfaceMap) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsite) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWirelessClient) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWirelessInterface) implementsGraphQLInterfacegetWebsiteByIdEntitiesEntityQueriesByIdEntity() {
}

func __unmarshalgetWebsiteByIdEntitiesEntityQueriesByIdEntity(b []byte, v *getWebsiteByIdEntitiesEntityQueriesByIdEntity) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ApacheInstance":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdApacheInstance)
		return json.Unmarshal(b, *v)
	case "Application":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdApplication)
		return json.Unmarshal(b, *v)
	case "ApplicationComponent":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdApplicationComponent)
		return json.Unmarshal(b, *v)
	case "AsaRemoteAccessSession":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAsaRemoteAccessSession)
		return json.Unmarshal(b, *v)
	case "AsaSiteToSiteTunnel":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAsaSiteToSiteTunnel)
		return json.Unmarshal(b, *v)
	case "AwsApiGateway":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsApiGateway)
		return json.Unmarshal(b, *v)
	case "AwsApplicationELB":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsApplicationELB)
		return json.Unmarshal(b, *v)
	case "AwsAuroraCluster":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraCluster)
		return json.Unmarshal(b, *v)
	case "AwsAuroraInstance":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraInstance)
		return json.Unmarshal(b, *v)
	case "AwsAutoScalingGroup":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsAutoScalingGroup)
		return json.Unmarshal(b, *v)
	case "AwsCloudFrontDistribution":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsCloudFrontDistribution)
		return json.Unmarshal(b, *v)
	case "AwsEBS":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsEBS)
		return json.Unmarshal(b, *v)
	case "AwsEFS":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsEFS)
		return json.Unmarshal(b, *v)
	case "AwsELB":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsELB)
		return json.Unmarshal(b, *v)
	case "AwsElasticBeanstalkEnvironment":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsElasticBeanstalkEnvironment)
		return json.Unmarshal(b, *v)
	case "AwsFsx":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsFsx)
		return json.Unmarshal(b, *v)
	case "AwsLambda":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsLambda)
		return json.Unmarshal(b, *v)
	case "AwsNatGateway":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsNatGateway)
		return json.Unmarshal(b, *v)
	case "AwsOpenSearchCollection":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchCollection)
		return json.Unmarshal(b, *v)
	case "AwsOpenSearchDomain":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchDomain)
		return json.Unmarshal(b, *v)
	case "AwsOpenSearchIngestionPipeline":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchIngestionPipeline)
		return json.Unmarshal(b, *v)
	case "AwsRDS":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsRDS)
		return json.Unmarshal(b, *v)
	case "AwsS3":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsS3)
		return json.Unmarshal(b, *v)
	case "AwsSNSTopic":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsSNSTopic)
		return json.Unmarshal(b, *v)
	case "AwsSQS":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsSQS)
		return json.Unmarshal(b, *v)
	case "AwsTransferFamily":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsTransferFamily)
		return json.Unmarshal(b, *v)
	case "AwsTransitGateway":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsTransitGateway)
		return json.Unmarshal(b, *v)
	case "AwsVPN":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAwsVPN)
		return json.Unmarshal(b, *v)
	case "AzureAppService":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureAppService)
		return json.Unmarshal(b, *v)
	case "AzureBlobStorage":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureBlobStorage)
		return json.Unmarshal(b, *v)
	case "AzureCdn":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureCdn)
		return json.Unmarshal(b, *v)
	case "AzureCosmosDb":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureCosmosDb)
		return json.Unmarshal(b, *v)
	case "AzureDatabasesName":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureDatabasesName)
		return json.Unmarshal(b, *v)
	case "AzureEventHubs":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureEventHubs)
		return json.Unmarshal(b, *v)
	case "AzureFiles":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureFiles)
		return json.Unmarshal(b, *v)
	case "AzureFrontDoor":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureFrontDoor)
		return json.Unmarshal(b, *v)
	case "AzureFunction":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureFunction)
		return json.Unmarshal(b, *v)
	case "AzureKeyVault":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureKeyVault)
		return json.Unmarshal(b, *v)
	case "AzureLoadBalancer":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureLoadBalancer)
		return json.Unmarshal(b, *v)
	case "AzureServiceBus":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureServiceBus)
		return json.Unmarshal(b, *v)
	case "AzureSqlDatabase":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureSqlDatabase)
		return json.Unmarshal(b, *v)
	case "AzureVirtualMachineScaleSet":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdAzureVirtualMachineScaleSet)
		return json.Unmarshal(b, *v)
	case "CloudAccount":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdCloudAccount)
		return json.Unmarshal(b, *v)
	case "Container":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdContainer)
		return json.Unmarshal(b, *v)
	case "DatabaseInstance":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdDatabaseInstance)
		return json.Unmarshal(b, *v)
	case "DeviceVolume":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdDeviceVolume)
		return json.Unmarshal(b, *v)
	case "EntityGroup":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdEntityGroup)
		return json.Unmarshal(b, *v)
	case "F5GTMWideIP":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdF5GTMWideIP)
		return json.Unmarshal(b, *v)
	case "F5LTMPool":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPool)
		return json.Unmarshal(b, *v)
	case "F5LTMPoolMember":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPoolMember)
		return json.Unmarshal(b, *v)
	case "F5LTMServer":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdF5LTMServer)
		return json.Unmarshal(b, *v)
	case "F5LTMVirtualIPAddress":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualIPAddress)
		return json.Unmarshal(b, *v)
	case "F5LTMVirtualServer":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualServer)
		return json.Unmarshal(b, *v)
	case "F5SystemFailover":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdF5SystemFailover)
		return json.Unmarshal(b, *v)
	case "F5SystemModule":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdF5SystemModule)
		return json.Unmarshal(b, *v)
	case "F5SystemVlan":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdF5SystemVlan)
		return json.Unmarshal(b, *v)
	case "HAMember":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdHAMember)
		return json.Unmarshal(b, *v)
	case "HAPool":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdHAPool)
		return json.Unmarshal(b, *v)
	case "HardwareSensor":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdHardwareSensor)
		return json.Unmarshal(b, *v)
	case "HcoEngine":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdHcoEngine)
		return json.Unmarshal(b, *v)
	case "HcoGroup":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdHcoGroup)
		return json.Unmarshal(b, *v)
	case "Host":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdHost)
		return json.Unmarshal(b, *v)
	case "IISWebServer":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdIISWebServer)
		return json.Unmarshal(b, *v)
	case "IpAddress":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdIpAddress)
		return json.Unmarshal(b, *v)
	case "KubernetesCluster":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCluster)
		return json.Unmarshal(b, *v)
	case "KubernetesContainer":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesContainer)
		return json.Unmarshal(b, *v)
	case "KubernetesCronJob":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCronJob)
		return json.Unmarshal(b, *v)
	case "KubernetesDaemonSet":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDaemonSet)
		return json.Unmarshal(b, *v)
	case "KubernetesDeployment":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDeployment)
		return json.Unmarshal(b, *v)
	case "KubernetesJob":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesJob)
		return json.Unmarshal(b, *v)
	case "KubernetesNamespace":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNamespace)
		return json.Unmarshal(b, *v)
	case "KubernetesNode":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNode)
		return json.Unmarshal(b, *v)
	case "KubernetesPersistentVolume":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolume)
		return json.Unmarshal(b, *v)
	case "KubernetesPersistentVolumeClaim":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolumeClaim)
		return json.Unmarshal(b, *v)
	case "KubernetesPod":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPod)
		return json.Unmarshal(b, *v)
	case "KubernetesPodInstance":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPodInstance)
		return json.Unmarshal(b, *v)
	case "KubernetesReplicaSet":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesReplicaSet)
		return json.Unmarshal(b, *v)
	case "KubernetesService":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesService)
		return json.Unmarshal(b, *v)
	case "KubernetesStatefulSet":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdKubernetesStatefulSet)
		return json.Unmarshal(b, *v)
	case "NetPathEndpoint":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdNetPathEndpoint)
		return json.Unmarshal(b, *v)
	case "NetworkDevice":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdNetworkDevice)
		return json.Unmarshal(b, *v)
	case "NetworkInterface":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdNetworkInterface)
		return json.Unmarshal(b, *v)
	case "NetworkShadowDevice":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdNetworkShadowDevice)
		return json.Unmarshal(b, *v)
	case "NginxInstance":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdNginxInstance)
		return json.Unmarshal(b, *v)
	case "PaloAltoRemoteAccessSession":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoRemoteAccessSession)
		return json.Unmarshal(b, *v)
	case "PaloAltoSiteToSiteTunnel":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoSiteToSiteTunnel)
		return json.Unmarshal(b, *v)
	case "PhysicalPort":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPort)
		return json.Unmarshal(b, *v)
	case "PhysicalPortEndpoint":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortEndpoint)
		return json.Unmarshal(b, *v)
	case "PhysicalPortIpAddress":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortIpAddress)
		return json.Unmarshal(b, *v)
	case "PhysicalPortToEndpoint":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortToEndpoint)
		return json.Unmarshal(b, *v)
	case "SdWanEdgeInterface":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdSdWanEdgeInterface)
		return json.Unmarshal(b, *v)
	case "SdWanTunnel":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdSdWanTunnel)
		return json.Unmarshal(b, *v)
	case "Service":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdService)
		return json.Unmarshal(b, *v)
	case "ServiceInstance":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdServiceInstance)
		return json.Unmarshal(b, *v)
	case "SyslogApplication":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdSyslogApplication)
		return json.Unmarshal(b, *v)
	case "SyslogHost":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdSyslogHost)
		return json.Unmarshal(b, *v)
	case "ThinAccessPoint":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdThinAccessPoint)
		return json.Unmarshal(b, *v)
	case "Transaction":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdTransaction)
		return json.Unmarshal(b, *v)
	case "Uri":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdUri)
		return json.Unmarshal(b, *v)
	case "VCenter":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdVCenter)
		return json.Unmarshal(b, *v)
	case "VirtualCluster":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdVirtualCluster)
		return json.Unmarshal(b, *v)
	case "VirtualDatacenter":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatacenter)
		return json.Unmarshal(b, *v)
	case "VirtualDatastore":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatastore)
		return json.Unmarshal(b, *v)
	case "VirtualHost":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdVirtualHost)
		return json.Unmarshal(b, *v)
	case "VirtualMachine":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdVirtualMachine)
		return json.Unmarshal(b, *v)
	case "VirtualRoutingForwarding":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdVirtualRoutingForwarding)
		return json.Unmarshal(b, *v)
	case "Vlan":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdVlan)
		return json.Unmarshal(b, *v)
	case "VlanDevice":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdVlanDevice)
		return json.Unmarshal(b, *v)
	case "VlanPortInterfaceMap":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdVlanPortInterfaceMap)
		return json.Unmarshal(b, *v)
	case "Website":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdWebsite)
		return json.Unmarshal(b, *v)
	case "WirelessClient":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdWirelessClient)
		return json.Unmarshal(b, *v)
	case "WirelessInterface":
		*v = new(getWebsiteByIdEntitiesEntityQueriesByIdWirelessInterface)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Entity.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for getWebsiteByIdEntitiesEntityQueriesByIdEntity: "%v"`, tn.TypeName)
	}
}

func __marshalgetWebsiteByIdEntitiesEntityQueriesByIdEntity(v *getWebsiteByIdEntitiesEntityQueriesByIdEntity) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *getWebsiteByIdEntitiesEntityQueriesByIdApacheInstance:
		typename = "ApacheInstance"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdApacheInstance
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdApplication:
		typename = "Application"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdApplication
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdApplicationComponent:
		typename = "ApplicationComponent"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdApplicationComponent
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAsaRemoteAccessSession:
		typename = "AsaRemoteAccessSession"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAsaRemoteAccessSession
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAsaSiteToSiteTunnel:
		typename = "AsaSiteToSiteTunnel"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAsaSiteToSiteTunnel
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsApiGateway:
		typename = "AwsApiGateway"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsApiGateway
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsApplicationELB:
		typename = "AwsApplicationELB"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsApplicationELB
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraCluster:
		typename = "AwsAuroraCluster"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraCluster
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraInstance:
		typename = "AwsAuroraInstance"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsAuroraInstance
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsAutoScalingGroup:
		typename = "AwsAutoScalingGroup"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsAutoScalingGroup
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsCloudFrontDistribution:
		typename = "AwsCloudFrontDistribution"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsCloudFrontDistribution
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsEBS:
		typename = "AwsEBS"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsEBS
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsEFS:
		typename = "AwsEFS"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsEFS
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsELB:
		typename = "AwsELB"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsELB
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsElasticBeanstalkEnvironment:
		typename = "AwsElasticBeanstalkEnvironment"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsElasticBeanstalkEnvironment
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsFsx:
		typename = "AwsFsx"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsFsx
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsLambda:
		typename = "AwsLambda"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsLambda
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsNatGateway:
		typename = "AwsNatGateway"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsNatGateway
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchCollection:
		typename = "AwsOpenSearchCollection"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchCollection
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchDomain:
		typename = "AwsOpenSearchDomain"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchDomain
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchIngestionPipeline:
		typename = "AwsOpenSearchIngestionPipeline"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsOpenSearchIngestionPipeline
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsRDS:
		typename = "AwsRDS"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsRDS
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsS3:
		typename = "AwsS3"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsS3
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsSNSTopic:
		typename = "AwsSNSTopic"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsSNSTopic
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsSQS:
		typename = "AwsSQS"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsSQS
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsTransferFamily:
		typename = "AwsTransferFamily"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsTransferFamily
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsTransitGateway:
		typename = "AwsTransitGateway"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsTransitGateway
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAwsVPN:
		typename = "AwsVPN"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAwsVPN
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureAppService:
		typename = "AzureAppService"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureAppService
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureBlobStorage:
		typename = "AzureBlobStorage"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureBlobStorage
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureCdn:
		typename = "AzureCdn"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureCdn
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureCosmosDb:
		typename = "AzureCosmosDb"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureCosmosDb
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureDatabasesName:
		typename = "AzureDatabasesName"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureDatabasesName
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureEventHubs:
		typename = "AzureEventHubs"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureEventHubs
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureFiles:
		typename = "AzureFiles"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureFiles
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureFrontDoor:
		typename = "AzureFrontDoor"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureFrontDoor
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureFunction:
		typename = "AzureFunction"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureFunction
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureKeyVault:
		typename = "AzureKeyVault"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureKeyVault
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureLoadBalancer:
		typename = "AzureLoadBalancer"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureLoadBalancer
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureServiceBus:
		typename = "AzureServiceBus"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureServiceBus
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureSqlDatabase:
		typename = "AzureSqlDatabase"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureSqlDatabase
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdAzureVirtualMachineScaleSet:
		typename = "AzureVirtualMachineScaleSet"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdAzureVirtualMachineScaleSet
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdCloudAccount:
		typename = "CloudAccount"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdCloudAccount
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdContainer:
		typename = "Container"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdContainer
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdDatabaseInstance:
		typename = "DatabaseInstance"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdDatabaseInstance
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdDeviceVolume:
		typename = "DeviceVolume"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdDeviceVolume
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdEntityGroup:
		typename = "EntityGroup"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdEntityGroup
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdF5GTMWideIP:
		typename = "F5GTMWideIP"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdF5GTMWideIP
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPool:
		typename = "F5LTMPool"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPool
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPoolMember:
		typename = "F5LTMPoolMember"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPoolMember
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMServer:
		typename = "F5LTMServer"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdF5LTMServer
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualIPAddress:
		typename = "F5LTMVirtualIPAddress"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualIPAddress
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualServer:
		typename = "F5LTMVirtualServer"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualServer
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdF5SystemFailover:
		typename = "F5SystemFailover"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdF5SystemFailover
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdF5SystemModule:
		typename = "F5SystemModule"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdF5SystemModule
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdF5SystemVlan:
		typename = "F5SystemVlan"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdF5SystemVlan
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdHAMember:
		typename = "HAMember"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdHAMember
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdHAPool:
		typename = "HAPool"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdHAPool
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdHardwareSensor:
		typename = "HardwareSensor"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdHardwareSensor
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdHcoEngine:
		typename = "HcoEngine"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdHcoEngine
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdHcoGroup:
		typename = "HcoGroup"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdHcoGroup
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdHost:
		typename = "Host"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdHost
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdIISWebServer:
		typename = "IISWebServer"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdIISWebServer
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdIpAddress:
		typename = "IpAddress"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdIpAddress
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCluster:
		typename = "KubernetesCluster"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCluster
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesContainer:
		typename = "KubernetesContainer"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesContainer
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCronJob:
		typename = "KubernetesCronJob"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCronJob
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDaemonSet:
		typename = "KubernetesDaemonSet"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDaemonSet
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDeployment:
		typename = "KubernetesDeployment"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDeployment
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesJob:
		typename = "KubernetesJob"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesJob
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNamespace:
		typename = "KubernetesNamespace"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNamespace
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNode:
		typename = "KubernetesNode"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNode
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolume:
		typename = "KubernetesPersistentVolume"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolume
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolumeClaim:
		typename = "KubernetesPersistentVolumeClaim"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolumeClaim
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPod:
		typename = "KubernetesPod"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPod
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPodInstance:
		typename = "KubernetesPodInstance"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPodInstance
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesReplicaSet:
		typename = "KubernetesReplicaSet"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesReplicaSet
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesService:
		typename = "KubernetesService"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesService
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesStatefulSet:
		typename = "KubernetesStatefulSet"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdKubernetesStatefulSet
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdNetPathEndpoint:
		typename = "NetPathEndpoint"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdNetPathEndpoint
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdNetworkDevice:
		typename = "NetworkDevice"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdNetworkDevice
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdNetworkInterface:
		typename = "NetworkInterface"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdNetworkInterface
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdNetworkShadowDevice:
		typename = "NetworkShadowDevice"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdNetworkShadowDevice
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdNginxInstance:
		typename = "NginxInstance"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdNginxInstance
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoRemoteAccessSession:
		typename = "PaloAltoRemoteAccessSession"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoRemoteAccessSession
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoSiteToSiteTunnel:
		typename = "PaloAltoSiteToSiteTunnel"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoSiteToSiteTunnel
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPort:
		typename = "PhysicalPort"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPort
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortEndpoint:
		typename = "PhysicalPortEndpoint"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortEndpoint
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortIpAddress:
		typename = "PhysicalPortIpAddress"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortIpAddress
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortToEndpoint:
		typename = "PhysicalPortToEndpoint"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortToEndpoint
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdSdWanEdgeInterface:
		typename = "SdWanEdgeInterface"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdSdWanEdgeInterface
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdSdWanTunnel:
		typename = "SdWanTunnel"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdSdWanTunnel
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdService:
		typename = "Service"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdService
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdServiceInstance:
		typename = "ServiceInstance"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdServiceInstance
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdSyslogApplication:
		typename = "SyslogApplication"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdSyslogApplication
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdSyslogHost:
		typename = "SyslogHost"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdSyslogHost
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdThinAccessPoint:
		typename = "ThinAccessPoint"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdThinAccessPoint
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdTransaction:
		typename = "Transaction"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdTransaction
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdUri:
		typename = "Uri"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdUri
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdVCenter:
		typename = "VCenter"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdVCenter
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdVirtualCluster:
		typename = "VirtualCluster"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdVirtualCluster
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatacenter:
		typename = "VirtualDatacenter"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatacenter
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatastore:
		typename = "VirtualDatastore"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatastore
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdVirtualHost:
		typename = "VirtualHost"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdVirtualHost
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdVirtualMachine:
		typename = "VirtualMachine"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdVirtualMachine
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdVirtualRoutingForwarding:
		typename = "VirtualRoutingForwarding"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdVirtualRoutingForwarding
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdVlan:
		typename = "Vlan"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdVlan
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdVlanDevice:
		typename = "VlanDevice"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdVlanDevice
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdVlanPortInterfaceMap:
		typename = "VlanPortInterfaceMap"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdVlanPortInterfaceMap
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdWebsite:
		typename = "Website"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdWebsite
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdWirelessClient:
		typename = "WirelessClient"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdWirelessClient
		}{typename, v}
		return json.Marshal(result)
	case *getWebsiteByIdEntitiesEntityQueriesByIdWirelessInterface:
		typename = "WirelessInterface"

		result := struct {
			TypeName string `json:"__typename"`
			*getWebsiteByIdEntitiesEntityQueriesByIdWirelessInterface
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for getWebsiteByIdEntitiesEntityQueriesByIdEntity: "%T"`, v)
	}
}

// getWebsiteByIdEntitiesEntityQueriesByIdEntityGroup includes the requested fields of the GraphQL type EntityGroup.
// The GraphQL type's documentation follows.
//
// Entity Group entity that may contain other entities
type getWebsiteByIdEntitiesEntityQueriesByIdEntityGroup struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdEntityGroup.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdEntityGroup) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdF5GTMWideIP includes the requested fields of the GraphQL type F5GTMWideIP.
type getWebsiteByIdEntitiesEntityQueriesByIdF5GTMWideIP struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdF5GTMWideIP.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5GTMWideIP) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPool includes the requested fields of the GraphQL type F5LTMPool.
type getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPool struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPool.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPool) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPoolMember includes the requested fields of the GraphQL type F5LTMPoolMember.
type getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPoolMember struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPoolMember.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMPoolMember) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdF5LTMServer includes the requested fields of the GraphQL type F5LTMServer.
type getWebsiteByIdEntitiesEntityQueriesByIdF5LTMServer struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdF5LTMServer.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMServer) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualIPAddress includes the requested fields of the GraphQL type F5LTMVirtualIPAddress.
type getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualIPAddress struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualIPAddress.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualIPAddress) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualServer includes the requested fields of the GraphQL type F5LTMVirtualServer.
type getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualServer struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualServer.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5LTMVirtualServer) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdF5SystemFailover includes the requested fields of the GraphQL type F5SystemFailover.
type getWebsiteByIdEntitiesEntityQueriesByIdF5SystemFailover struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdF5SystemFailover.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5SystemFailover) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdF5SystemModule includes the requested fields of the GraphQL type F5SystemModule.
type getWebsiteByIdEntitiesEntityQueriesByIdF5SystemModule struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdF5SystemModule.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5SystemModule) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdF5SystemVlan includes the requested fields of the GraphQL type F5SystemVlan.
type getWebsiteByIdEntitiesEntityQueriesByIdF5SystemVlan struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdF5SystemVlan.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdF5SystemVlan) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdHAMember includes the requested fields of the GraphQL type HAMember.
// The GraphQL type's documentation follows.
//
// Entity representing a member of an HAPool
type getWebsiteByIdEntitiesEntityQueriesByIdHAMember struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdHAMember.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHAMember) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdHAPool includes the requested fields of the GraphQL type HAPool.
// The GraphQL type's documentation follows.
//
// HA pool entity
type getWebsiteByIdEntitiesEntityQueriesByIdHAPool struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdHAPool.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHAPool) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdHardwareSensor includes the requested fields of the GraphQL type HardwareSensor.
// The GraphQL type's documentation follows.
//
// Hardware Sensor entity
type getWebsiteByIdEntitiesEntityQueriesByIdHardwareSensor struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdHardwareSensor.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHardwareSensor) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdHcoEngine includes the requested fields of the GraphQL type HcoEngine.
// The GraphQL type's documentation follows.
//
// HcoEngine entity represents Hybrid Cloud Observability polling engine
type getWebsiteByIdEntitiesEntityQueriesByIdHcoEngine struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdHcoEngine.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHcoEngine) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdHcoGroup includes the requested fields of the GraphQL type HcoGroup.
// The GraphQL type's documentation follows.
//
// HcoGroup entity represents Hybrid Cloud Observability entity group
type getWebsiteByIdEntitiesEntityQueriesByIdHcoGroup struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdHcoGroup.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHcoGroup) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdHost includes the requested fields of the GraphQL type Host.
// The GraphQL type's documentation follows.
//
// Host entity
type getWebsiteByIdEntitiesEntityQueriesByIdHost struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdHost.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdHost) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdIISWebServer includes the requested fields of the GraphQL type IISWebServer.
type getWebsiteByIdEntitiesEntityQueriesByIdIISWebServer struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdIISWebServer.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdIISWebServer) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdIpAddress includes the requested fields of the GraphQL type IpAddress.
// The GraphQL type's documentation follows.
//
// IpAddress entity
type getWebsiteByIdEntitiesEntityQueriesByIdIpAddress struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdIpAddress.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdIpAddress) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCluster includes the requested fields of the GraphQL type KubernetesCluster.
// The GraphQL type's documentation follows.
//
// Kubernetes Cluster entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCluster struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCluster.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCluster) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesContainer includes the requested fields of the GraphQL type KubernetesContainer.
// The GraphQL type's documentation follows.
//
// Kubernetes Container entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesContainer struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesContainer.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesContainer) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCronJob includes the requested fields of the GraphQL type KubernetesCronJob.
// The GraphQL type's documentation follows.
//
// Kubernetes CronJob entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCronJob struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCronJob.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesCronJob) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDaemonSet includes the requested fields of the GraphQL type KubernetesDaemonSet.
// The GraphQL type's documentation follows.
//
// Kubernetes DaemonSet entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDaemonSet struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDaemonSet.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDaemonSet) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDeployment includes the requested fields of the GraphQL type KubernetesDeployment.
// The GraphQL type's documentation follows.
//
// Kubernetes Deployment entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDeployment struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDeployment.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesDeployment) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesJob includes the requested fields of the GraphQL type KubernetesJob.
// The GraphQL type's documentation follows.
//
// Kubernetes Job entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesJob struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesJob.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesJob) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNamespace includes the requested fields of the GraphQL type KubernetesNamespace.
// The GraphQL type's documentation follows.
//
// Kubernetes Namespace entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNamespace struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNamespace.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNamespace) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNode includes the requested fields of the GraphQL type KubernetesNode.
// The GraphQL type's documentation follows.
//
// Kubernetes Node entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNode struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNode.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesNode) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolume includes the requested fields of the GraphQL type KubernetesPersistentVolume.
// The GraphQL type's documentation follows.
//
// Kubernetes PersistenVolume entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolume struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolume.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolume) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolumeClaim includes the requested fields of the GraphQL type KubernetesPersistentVolumeClaim.
// The GraphQL type's documentation follows.
//
// Kubernetes PersistenVolumeClaim entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolumeClaim struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolumeClaim.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPersistentVolumeClaim) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPod includes the requested fields of the GraphQL type KubernetesPod.
// The GraphQL type's documentation follows.
//
// Kubernetes Pod entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPod struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPod.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPod) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPodInstance includes the requested fields of the GraphQL type KubernetesPodInstance.
// The GraphQL type's documentation follows.
//
// Kubernetes Pod Instance entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPodInstance struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPodInstance.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesPodInstance) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesReplicaSet includes the requested fields of the GraphQL type KubernetesReplicaSet.
// The GraphQL type's documentation follows.
//
// Kubernetes ReplicaSet entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesReplicaSet struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesReplicaSet.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesReplicaSet) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesService includes the requested fields of the GraphQL type KubernetesService.
// The GraphQL type's documentation follows.
//
// Kubernetes Service entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesService struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesService.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesService) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdKubernetesStatefulSet includes the requested fields of the GraphQL type KubernetesStatefulSet.
// The GraphQL type's documentation follows.
//
// Kubernetes StatefulSet entity
type getWebsiteByIdEntitiesEntityQueriesByIdKubernetesStatefulSet struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdKubernetesStatefulSet.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdKubernetesStatefulSet) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdNetPathEndpoint includes the requested fields of the GraphQL type NetPathEndpoint.
// The GraphQL type's documentation follows.
//
// NetPath Endpoint entity is a representation of target monitored by NetPath Probe.
type getWebsiteByIdEntitiesEntityQueriesByIdNetPathEndpoint struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdNetPathEndpoint.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdNetPathEndpoint) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdNetworkDevice includes the requested fields of the GraphQL type NetworkDevice.
// The GraphQL type's documentation follows.
//
// Network Device entity as a flat representation of Orion SWIS schema for all statistics related to Node
// with telemetry mapping condition to all telemetry with existing tags 'sw.collector.Nodes.Uri' and 'sw.collector.Nodes.Category'
type getWebsiteByIdEntitiesEntityQueriesByIdNetworkDevice struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdNetworkDevice.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdNetworkDevice) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdNetworkInterface includes the requested fields of the GraphQL type NetworkInterface.
// The GraphQL type's documentation follows.
//
// Network Interface entity
type getWebsiteByIdEntitiesEntityQueriesByIdNetworkInterface struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdNetworkInterface.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdNetworkInterface) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdNetworkShadowDevice includes the requested fields of the GraphQL type NetworkShadowDevice.
// The GraphQL type's documentation follows.
//
// This Entity represents Shadow Node, which is a node where we know just the IP address and nothing else. This entity can be important for displaying topology data.
type getWebsiteByIdEntitiesEntityQueriesByIdNetworkShadowDevice struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdNetworkShadowDevice.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdNetworkShadowDevice) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdNginxInstance includes the requested fields of the GraphQL type NginxInstance.
type getWebsiteByIdEntitiesEntityQueriesByIdNginxInstance struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdNginxInstance.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdNginxInstance) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoRemoteAccessSession includes the requested fields of the GraphQL type PaloAltoRemoteAccessSession.
// The GraphQL type's documentation follows.
//
// Palo Alto Firewall Remote Access entity
type getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoRemoteAccessSession struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoRemoteAccessSession.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoRemoteAccessSession) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoSiteToSiteTunnel includes the requested fields of the GraphQL type PaloAltoSiteToSiteTunnel.
// The GraphQL type's documentation follows.
//
// Palo Alto Firewall SiteToSiteTunnel entity
type getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoSiteToSiteTunnel struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoSiteToSiteTunnel.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPaloAltoSiteToSiteTunnel) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPort includes the requested fields of the GraphQL type PhysicalPort.
// The GraphQL type's documentation follows.
//
// PhysicalPort entity
type getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPort struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPort.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPort) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortEndpoint includes the requested fields of the GraphQL type PhysicalPortEndpoint.
// The GraphQL type's documentation follows.
//
// PhysicalPortEndpoint entity
type getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortEndpoint struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortEndpoint.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortEndpoint) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortIpAddress includes the requested fields of the GraphQL type PhysicalPortIpAddress.
// The GraphQL type's documentation follows.
//
// PhysicalPortIpAddress entity
type getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortIpAddress struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortIpAddress.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortIpAddress) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortToEndpoint includes the requested fields of the GraphQL type PhysicalPortToEndpoint.
// The GraphQL type's documentation follows.
//
// PhysicalPortToEndpoint entity
type getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortToEndpoint struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortToEndpoint.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdPhysicalPortToEndpoint) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdSdWanEdgeInterface includes the requested fields of the GraphQL type SdWanEdgeInterface.
// The GraphQL type's documentation follows.
//
// SD-WAN Edge Interface entity
type getWebsiteByIdEntitiesEntityQueriesByIdSdWanEdgeInterface struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdSdWanEdgeInterface.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdSdWanEdgeInterface) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdSdWanTunnel includes the requested fields of the GraphQL type SdWanTunnel.
// The GraphQL type's documentation follows.
//
// SD-WAN Tunnel entity
type getWebsiteByIdEntitiesEntityQueriesByIdSdWanTunnel struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdSdWanTunnel.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdSdWanTunnel) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdService includes the requested fields of the GraphQL type Service.
// The GraphQL type's documentation follows.
//
// Service entity
type getWebsiteByIdEntitiesEntityQueriesByIdService struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdService.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdService) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdServiceInstance includes the requested fields of the GraphQL type ServiceInstance.
// The GraphQL type's documentation follows.
//
// Service Instance entity
type getWebsiteByIdEntitiesEntityQueriesByIdServiceInstance struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdServiceInstance.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdServiceInstance) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdSyslogApplication includes the requested fields of the GraphQL type SyslogApplication.
// The GraphQL type's documentation follows.
//
// Syslog Application entity
type getWebsiteByIdEntitiesEntityQueriesByIdSyslogApplication struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdSyslogApplication.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdSyslogApplication) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdSyslogHost includes the requested fields of the GraphQL type SyslogHost.
// The GraphQL type's documentation follows.
//
// Syslog Host entity
type getWebsiteByIdEntitiesEntityQueriesByIdSyslogHost struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdSyslogHost.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdSyslogHost) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdThinAccessPoint includes the requested fields of the GraphQL type ThinAccessPoint.
// The GraphQL type's documentation follows.
//
// Thin Access Point
type getWebsiteByIdEntitiesEntityQueriesByIdThinAccessPoint struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdThinAccessPoint.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdThinAccessPoint) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdTransaction includes the requested fields of the GraphQL type Transaction.
// The GraphQL type's documentation follows.
//
// Transaction entity
type getWebsiteByIdEntitiesEntityQueriesByIdTransaction struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdTransaction.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdTransaction) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdUri includes the requested fields of the GraphQL type Uri.
// The GraphQL type's documentation follows.
//
// Uri entity
type getWebsiteByIdEntitiesEntityQueriesByIdUri struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdUri.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdUri) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdVCenter includes the requested fields of the GraphQL type VCenter.
type getWebsiteByIdEntitiesEntityQueriesByIdVCenter struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdVCenter.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVCenter) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdVirtualCluster includes the requested fields of the GraphQL type VirtualCluster.
type getWebsiteByIdEntitiesEntityQueriesByIdVirtualCluster struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdVirtualCluster.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualCluster) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatacenter includes the requested fields of the GraphQL type VirtualDatacenter.
type getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatacenter struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatacenter.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatacenter) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatastore includes the requested fields of the GraphQL type VirtualDatastore.
type getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatastore struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatastore.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualDatastore) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdVirtualHost includes the requested fields of the GraphQL type VirtualHost.
type getWebsiteByIdEntitiesEntityQueriesByIdVirtualHost struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdVirtualHost.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualHost) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdVirtualMachine includes the requested fields of the GraphQL type VirtualMachine.
type getWebsiteByIdEntitiesEntityQueriesByIdVirtualMachine struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdVirtualMachine.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualMachine) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdVirtualRoutingForwarding includes the requested fields of the GraphQL type VirtualRoutingForwarding.
// The GraphQL type's documentation follows.
//
// Virtual Routing Forwarding (VRF) entity
type getWebsiteByIdEntitiesEntityQueriesByIdVirtualRoutingForwarding struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdVirtualRoutingForwarding.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVirtualRoutingForwarding) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdVlan includes the requested fields of the GraphQL type Vlan.
// The GraphQL type's documentation follows.
//
// Vlan entity
type getWebsiteByIdEntitiesEntityQueriesByIdVlan struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdVlan.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVlan) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdVlanDevice includes the requested fields of the GraphQL type VlanDevice.
// The GraphQL type's documentation follows.
//
// VlanDevice entity
type getWebsiteByIdEntitiesEntityQueriesByIdVlanDevice struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdVlanDevice.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVlanDevice) GetTypename() *string { return v.Typename }

// getWebsiteByIdEntitiesEntityQueriesByIdVlanPortInterfaceMap includes the requested fields of the GraphQL type VlanPortInterfaceMap.
// The GraphQL type's documentation follows.
//
// Vlan port and interface mapping entity
type getWebsiteByIdEntitiesEntityQueriesByIdVlanPortInterfaceMap struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdVlanPortInterfaceMap.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdVlanPortInterfaceMap) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdWebsite includes the requested fields of the GraphQL type Website.
// The GraphQL type's documentation follows.
//
// Website entity
type getWebsiteByIdEntitiesEntityQueriesByIdWebsite struct {
	Typename *string `json:"__typename"`
	// Entity name
	Name       *string                                                   `json:"name"`
	Url        string                                                    `json:"url"`
	Monitoring *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring `json:"monitoring"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdWebsite.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsite) GetTypename() *string { return v.Typename }

// GetName returns getWebsiteByIdEntitiesEntityQueriesByIdWebsite.Name, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsite) GetName() *string { return v.Name }

// GetUrl returns getWebsiteByIdEntitiesEntityQueriesByIdWebsite.Url, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsite) GetUrl() string { return v.Url }

// GetMonitoring returns getWebsiteByIdEntitiesEntityQueriesByIdWebsite.Monitoring, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsite) GetMonitoring() *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring {
	return v.Monitoring
}

// getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring includes the requested fields of the GraphQL type WebsiteMonitoring.
type getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring struct {
	CustomHeaders []getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringCustomHeadersCustomHeader         `json:"customHeaders"`
	Availability  *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring `json:"availability"`
	Rum           *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringRumRumMonitoring                   `json:"rum"`
	Options       *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringOptions                            `json:"options"`
}

// GetCustomHeaders returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring.CustomHeaders, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring) GetCustomHeaders() []getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringCustomHeadersCustomHeader {
	return v.CustomHeaders
}

// GetAvailability returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring.Availability, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring) GetAvailability() *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring {
	return v.Availability
}

// GetRum returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring.Rum, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring) GetRum() *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringRumRumMonitoring {
	return v.Rum
}

// GetOptions returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring.Options, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoring) GetOptions() *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringOptions {
	return v.Options
}

// getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring includes the requested fields of the GraphQL type AvailabilityMonitoring.
type getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring struct {
	Protocols             []WebsiteProtocol                                                                                                           `json:"protocols"`
	LocationOptions       []getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringLocationOptionsProbeLocation    `json:"locationOptions"`
	PlatformOptions       *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringPlatformOptions                  `json:"platformOptions"`
	TestFromLocation      *ProbeLocationType                                                                                                          `json:"testFromLocation"`
	TestIntervalInSeconds *int                                                                                                                        `json:"testIntervalInSeconds"`
	CheckForString        *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringCheckForStringCheckForStringType `json:"checkForString"`
	Ssl                   *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringSslSslMonitoring                 `json:"ssl"`
}

// GetProtocols returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring.Protocols, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring) GetProtocols() []WebsiteProtocol {
	return v.Protocols
}

// GetLocationOptions returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring.LocationOptions, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring) GetLocationOptions() []getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringLocationOptionsProbeLocation {
	return v.LocationOptions
}

// GetPlatformOptions returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring.PlatformOptions, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring) GetPlatformOptions() *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringPlatformOptions {
	return v.PlatformOptions
}

// GetTestFromLocation returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring.TestFromLocation, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring) GetTestFromLocation() *ProbeLocationType {
	return v.TestFromLocation
}

// GetTestIntervalInSeconds returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring.TestIntervalInSeconds, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring) GetTestIntervalInSeconds() *int {
	return v.TestIntervalInSeconds
}

// GetCheckForString returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring.CheckForString, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring) GetCheckForString() *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringCheckForStringCheckForStringType {
	return v.CheckForString
}

// GetSsl returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring.Ssl, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoring) GetSsl() *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringSslSslMonitoring {
	return v.Ssl
}

// getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringCheckForStringCheckForStringType includes the requested fields of the GraphQL type CheckForStringType.
type getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringCheckForStringCheckForStringType struct {
	Operator CheckStringOperator `json:"operator"`
	Value    string              `json:"value"`
}

// GetOperator returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringCheckForStringCheckForStringType.Operator, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringCheckForStringCheckForStringType) GetOperator() CheckStringOperator {
	return v.Operator
}

// GetValue returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringCheckForStringCheckForStringType.Value, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringCheckForStringCheckForStringType) GetValue() string {
	return v.Value
}

// getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringLocationOptionsProbeLocation includes the requested fields of the GraphQL type ProbeLocation.
type getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringLocationOptionsProbeLocation struct {
	Type  ProbeLocationType `json:"type"`
	Value string            `json:"value"`
}

// GetType returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringLocationOptionsProbeLocation.Type, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringLocationOptionsProbeLocation) GetType() ProbeLocationType {
	return v.Type
}

// GetValue returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringLocationOptionsProbeLocation.Value, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringLocationOptionsProbeLocation) GetValue() string {
	return v.Value
}

// getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringPlatformOptions includes the requested fields of the GraphQL type PlatformOptions.
type getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringPlatformOptions struct {
	TestFromAll bool     `json:"testFromAll"`
	Platforms   []string `json:"platforms"`
}

// GetTestFromAll returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringPlatformOptions.TestFromAll, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringPlatformOptions) GetTestFromAll() bool {
	return v.TestFromAll
}

// GetPlatforms returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringPlatformOptions.Platforms, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringPlatformOptions) GetPlatforms() []string {
	return v.Platforms
}

// getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringSslSslMonitoring includes the requested fields of the GraphQL type SslMonitoring.
type getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringSslSslMonitoring struct {
	Enabled                        bool `json:"enabled"`
	DaysPriorToExpiration          *int `json:"daysPriorToExpiration"`
	IgnoreIntermediateCertificates bool `json:"ignoreIntermediateCertificates"`
}

// GetEnabled returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringSslSslMonitoring.Enabled, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringSslSslMonitoring) GetEnabled() bool {
	return v.Enabled
}

// GetDaysPriorToExpiration returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringSslSslMonitoring.DaysPriorToExpiration, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringSslSslMonitoring) GetDaysPriorToExpiration() *int {
	return v.DaysPriorToExpiration
}

// GetIgnoreIntermediateCertificates returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringSslSslMonitoring.IgnoreIntermediateCertificates, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringAvailabilityAvailabilityMonitoringSslSslMonitoring) GetIgnoreIntermediateCertificates() bool {
	return v.IgnoreIntermediateCertificates
}

// getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringCustomHeadersCustomHeader includes the requested fields of the GraphQL type CustomHeader.
type getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringCustomHeadersCustomHeader struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringCustomHeadersCustomHeader.Name, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringCustomHeadersCustomHeader) GetName() string {
	return v.Name
}

// GetValue returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringCustomHeadersCustomHeader.Value, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringCustomHeadersCustomHeader) GetValue() string {
	return v.Value
}

// getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringOptions includes the requested fields of the GraphQL type MonitoringOptions.
type getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringOptions struct {
	IsAvailabilityActive bool `json:"isAvailabilityActive"`
	IsRumActive          bool `json:"isRumActive"`
}

// GetIsAvailabilityActive returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringOptions.IsAvailabilityActive, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringOptions) GetIsAvailabilityActive() bool {
	return v.IsAvailabilityActive
}

// GetIsRumActive returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringOptions.IsRumActive, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringOptions) GetIsRumActive() bool {
	return v.IsRumActive
}

// getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringRumRumMonitoring includes the requested fields of the GraphQL type RumMonitoring.
type getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringRumRumMonitoring struct {
	ApdexTimeInSeconds *int    `json:"apdexTimeInSeconds"`
	Snippet            *string `json:"snippet"`
	Spa                bool    `json:"spa"`
}

// GetApdexTimeInSeconds returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringRumRumMonitoring.ApdexTimeInSeconds, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringRumRumMonitoring) GetApdexTimeInSeconds() *int {
	return v.ApdexTimeInSeconds
}

// GetSnippet returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringRumRumMonitoring.Snippet, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringRumRumMonitoring) GetSnippet() *string {
	return v.Snippet
}

// GetSpa returns getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringRumRumMonitoring.Spa, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWebsiteMonitoringRumRumMonitoring) GetSpa() bool {
	return v.Spa
}

// getWebsiteByIdEntitiesEntityQueriesByIdWirelessClient includes the requested fields of the GraphQL type WirelessClient.
// The GraphQL type's documentation follows.
//
// Thin Access Point
type getWebsiteByIdEntitiesEntityQueriesByIdWirelessClient struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdWirelessClient.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWirelessClient) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdEntitiesEntityQueriesByIdWirelessInterface includes the requested fields of the GraphQL type WirelessInterface.
// The GraphQL type's documentation follows.
//
// Thin Access Point
type getWebsiteByIdEntitiesEntityQueriesByIdWirelessInterface struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns getWebsiteByIdEntitiesEntityQueriesByIdWirelessInterface.Typename, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdEntitiesEntityQueriesByIdWirelessInterface) GetTypename() *string {
	return v.Typename
}

// getWebsiteByIdResponse is returned by getWebsiteById on success.
type getWebsiteByIdResponse struct {
	// Queries related to entities
	Entities getWebsiteByIdEntitiesEntityQueries `json:"entities"`
}

// GetEntities returns getWebsiteByIdResponse.Entities, and is useful for accessing the field via an interface.
func (v *getWebsiteByIdResponse) GetEntities() getWebsiteByIdEntitiesEntityQueries { return v.Entities }

// updateAlertDefinitionAlertMutations includes the requested fields of the GraphQL type AlertMutations.
type updateAlertDefinitionAlertMutations struct {
	// Updates an Alert definition by ID and returns the alert on success, or null when no such Alert definition exists.
	UpdateAlertDefinition *updateAlertDefinitionAlertMutationsUpdateAlertDefinition `json:"updateAlertDefinition"`
}

// GetUpdateAlertDefinition returns updateAlertDefinitionAlertMutations.UpdateAlertDefinition, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutations) GetUpdateAlertDefinition() *updateAlertDefinitionAlertMutationsUpdateAlertDefinition {
	return v.UpdateAlertDefinition
}

// updateAlertDefinitionAlertMutationsUpdateAlertDefinition includes the requested fields of the GraphQL type AlertDefinition.
// The GraphQL type's documentation follows.
//
// Alert definition object.
type updateAlertDefinitionAlertMutationsUpdateAlertDefinition struct {
	// Alert definition actions (notifications) to be triggered in a case of a new active alert, or when active alert
	// returns to normal.
	Actions []updateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction `json:"actions"`
	// Indication whether to send a notification when active alert returns to normal.
	TriggerResetActions bool `json:"triggerResetActions"`
	// Alert definition condition type.
	ConditionType ConditionType `json:"conditionType"`
	// Ordered list of condition nodes representing the flattened condition tree. The first item is the tree root.
	FlatCondition []updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression `json:"flatCondition"`
	// Alert definition description.
	Description *string `json:"description"`
	// Indication whether the Alert definition is being evaluated.
	Enabled bool `json:"enabled"`
	// Alert definition ID (in the UUID format).
	Id string `json:"id"`
	// Alert definition name.
	Name string `json:"name"`
	// Organization ID where the Alert definition was created.
	OrganizationId string `json:"organizationId"`
	// Alert definition severity.
	Severity AlertSeverity `json:"severity"`
	// Indication whether the Alert definition is triggered (i.e. if there is at least one active alert instance).
	Triggered bool `json:"triggered"`
	// Timestamp (in the ISO-8601 date and time format in UTC) indicating when the Alert definition was triggered
	// (*null* if the Alert definition is currently not triggered).
	TriggeredTime *string `json:"triggeredTime"`
	// Entity types targeted by the Alert definition.
	TargetEntityTypes []string `json:"targetEntityTypes"`
	// Information if notifications for the Alert definition are muted (suppressed).
	MuteInfo updateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo `json:"muteInfo"`
	// Alert definition creator ID.
	UserId string `json:"userId"`
}

// GetActions returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.Actions, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetActions() []updateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction {
	return v.Actions
}

// GetTriggerResetActions returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.TriggerResetActions, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetTriggerResetActions() bool {
	return v.TriggerResetActions
}

// GetConditionType returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.ConditionType, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetConditionType() ConditionType {
	return v.ConditionType
}

// GetFlatCondition returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.FlatCondition, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetFlatCondition() []updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression {
	return v.FlatCondition
}

// GetDescription returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.Description, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetDescription() *string {
	return v.Description
}

// GetEnabled returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.Enabled, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetEnabled() bool {
	return v.Enabled
}

// GetId returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.Id, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetId() string { return v.Id }

// GetName returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.Name, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetName() string { return v.Name }

// GetOrganizationId returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.OrganizationId, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetOrganizationId() string {
	return v.OrganizationId
}

// GetSeverity returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.Severity, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetSeverity() AlertSeverity {
	return v.Severity
}

// GetTriggered returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.Triggered, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetTriggered() bool {
	return v.Triggered
}

// GetTriggeredTime returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.TriggeredTime, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetTriggeredTime() *string {
	return v.TriggeredTime
}

// GetTargetEntityTypes returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.TargetEntityTypes, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetTargetEntityTypes() []string {
	return v.TargetEntityTypes
}

// GetMuteInfo returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.MuteInfo, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetMuteInfo() updateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo {
	return v.MuteInfo
}

// GetUserId returns updateAlertDefinitionAlertMutationsUpdateAlertDefinition.UserId, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetUserId() string {
	return v.UserId
}

// updateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction includes the requested fields of the GraphQL type AlertAction.
// The GraphQL type's documentation follows.
//
// Alert definition action object. It describes which notifications of a given type shall be triggered in a case of a new
// active alert, or when active alert returns to normal.
type updateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction struct {
	// Notification configuration IDs.
	ConfigurationIds []string `json:"configurationIds"`
	// Notification service type (email, MS Teams, Slack, webhook, ...).
	Type string `json:"type"`
}

// GetConfigurationIds returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction) GetConfigurationIds() []string {
	return v.ConfigurationIds
}

// GetType returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction.Type, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction) GetType() string {
	return v.Type
}

// updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression includes the requested fields of the GraphQL type FlatAlertConditionExpression.
type updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression struct {
	// Alert Condition Expression Tree Node ID
	Id string `json:"id"`
	// List of named child condition node IDs.
	Links []updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks `json:"links"`
	// Ordered list of expression nodes representing the flatten tree.
	// The first item is the tree root with named links using `operands`.
	Value *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode `json:"value"`
}

// GetId returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression.Id, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression) GetId() string {
	return v.Id
}

// GetLinks returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression.Links, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression) GetLinks() []updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks {
	return v.Links
}

// GetValue returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression.Value, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression) GetValue() *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode {
	return v.Value
}

// updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks includes the requested fields of the GraphQL type NamedLinks.
type updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks struct {
	// Name of the link
	Name string `json:"name"`
	// List of linked node IDs
	Values []string `json:"values"`
}

// GetName returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks.Name, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks) GetName() string {
	return v.Name
}

// GetValues returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks.Values, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks) GetValues() []string {
	return v.Values
}

// updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode includes the requested fields of the GraphQL type FlatAlertConditionNode.
// The GraphQL type's documentation follows.
//
// See https://swicloud.atlassian.net/wiki/spaces/NIT/pages/2700936948/Data+Format+for+storing+alerts.
type updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode struct {
	// Entity metric field for `metricField` nodes
	FieldName *string `json:"fieldName"`
	// Operator for combining operands. Supported values:
	// - For aggregationOperator: `COUNT`, `MIN`, `MAX`, `AVG`, `SUM`, `LAST`
	// - For binaryOperator: `=`, `!=`, `>`, `<`, `>=`, `<=`, `IN`
	// - For logicalOperator: `AND`, `OR`
	// - For unaryOperator: `!`
	// - For relationshipOperator: null
	Operator *string `json:"operator"`
	// Node (operator) type. Supported values:
	// - `aggregationOperator` (child of `binaryOperator`)
	// - `binaryOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `constantValue` (root, or child of `aggregationOperator`, `binaryOperator`)
	// - `logicalOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `attributeField` (child of `binaryOperator`)
	// - `metricField` (child of `binaryOperator`, `aggregationOperator`)
	// - `queryField` (child of `aggregationOperator`)
	// - `unaryOperator` (root, or child of `logicalOperator`, `unaryOperator`, `relationshipOperator`)
	// - `relationshipOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	Type string `json:"type"`
	// Query specification for `queryField` nodes.
	Query *string `json:"query"`
}

// GetFieldName returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.FieldName, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetFieldName() *string {
	return v.FieldName
}

// GetOperator returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Operator, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetOperator() *string {
	return v.Operator
}

// GetType returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Type, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetType() string {
	return v.Type
}

// GetQuery returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Query, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetQuery() *string {
	return v.Query
}

// updateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo includes the requested fields of the GraphQL type AlertDefinitionMuteInfo.
// The GraphQL type's documentation follows.
//
// Information if notifications for the Alert definition are muted (suppressed).
type updateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo struct {
	// Indication whether notifications for the Alert definition are muted.
	Muted bool `json:"muted"`
	// Timestamp (in the ISO-8601 date and time format in UTC) indicating until when notifications for the Alert definition
	// are muted. If not specified, notifications are muted 'until resolved', i.e. until all evaluations are set back to
	// the *OK* state (either automatically or using manual reset).
	Until *string `json:"until"`
}

// GetMuted returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo.Muted, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo) GetMuted() bool {
	return v.Muted
}

// GetUntil returns updateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo.Until, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo) GetUntil() *string {
	return v.Until
}

// updateAlertDefinitionResponse is returned by updateAlertDefinition on success.
type updateAlertDefinitionResponse struct {
	// Mutations related to Alerting.
	AlertMutations updateAlertDefinitionAlertMutations `json:"alertMutations"`
}

// GetAlertMutations returns updateAlertDefinitionResponse.AlertMutations, and is useful for accessing the field via an interface.
func (v *updateAlertDefinitionResponse) GetAlertMutations() updateAlertDefinitionAlertMutations {
	return v.AlertMutations
}

// updateDashboardResponse is returned by updateDashboard on success.
type updateDashboardResponse struct {
	UpdateDashboard updateDashboardUpdateDashboardUpdateDashboardResponse `json:"updateDashboard"`
}

// GetUpdateDashboard returns updateDashboardResponse.UpdateDashboard, and is useful for accessing the field via an interface.
func (v *updateDashboardResponse) GetUpdateDashboard() updateDashboardUpdateDashboardUpdateDashboardResponse {
	return v.UpdateDashboard
}

// updateDashboardUpdateDashboardUpdateDashboardResponse includes the requested fields of the GraphQL type UpdateDashboardResponse.
type updateDashboardUpdateDashboardUpdateDashboardResponse struct {
	Code      string                                                          `json:"code"`
	Success   bool                                                            `json:"success"`
	Message   string                                                          `json:"message"`
	Dashboard *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard `json:"dashboard"`
}

// GetCode returns updateDashboardUpdateDashboardUpdateDashboardResponse.Code, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponse) GetCode() string { return v.Code }

// GetSuccess returns updateDashboardUpdateDashboardUpdateDashboardResponse.Success, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponse) GetSuccess() bool { return v.Success }

// GetMessage returns updateDashboardUpdateDashboardUpdateDashboardResponse.Message, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponse) GetMessage() string { return v.Message }

// GetDashboard returns updateDashboardUpdateDashboardUpdateDashboardResponse.Dashboard, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponse) GetDashboard() *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard {
	return v.Dashboard
}

// updateDashboardUpdateDashboardUpdateDashboardResponseDashboard includes the requested fields of the GraphQL type Dashboard.
type updateDashboardUpdateDashboardUpdateDashboardResponseDashboard struct {
	Id        string                                                                        `json:"id"`
	Owner     *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner          `json:"owner"`
	Widgets   []updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget `json:"widgets"`
	Layout    []updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout        `json:"layout"`
	CreatedAt time.Time                                                                     `json:"createdAt"`
	UpdatedAt time.Time                                                                     `json:"updatedAt"`
}

// GetId returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.Id, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetId() string { return v.Id }

// GetOwner returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.Owner, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetOwner() *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner {
	return v.Owner
}

// GetWidgets returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.Widgets, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetWidgets() []updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget {
	return v.Widgets
}

// GetLayout returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.Layout, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetLayout() []updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout {
	return v.Layout
}

// GetCreatedAt returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.CreatedAt, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetUpdatedAt returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.UpdatedAt, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetUpdatedAt() time.Time {
	return v.UpdatedAt
}

// updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout includes the requested fields of the GraphQL type Layout.
type updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout struct {
	Id     string `json:"id"`
	X      int    `json:"x"`
	Y      int    `json:"y"`
	Width  int    `json:"width"`
	Height int    `json:"height"`
}

// GetId returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout.Id, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout) GetId() string {
	return v.Id
}

// GetX returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout.X, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout) GetX() int { return v.X }

// GetY returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout.Y, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout) GetY() int { return v.Y }

// GetWidth returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout.Width, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout) GetWidth() int {
	return v.Width
}

// GetHeight returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout.Height, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout) GetHeight() int {
	return v.Height
}

// updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner includes the requested fields of the GraphQL type DashboardOwner.
type updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner.Id, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner) GetId() string {
	return v.Id
}

// GetName returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner.Name, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner) GetName() string {
	return v.Name
}

// updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget includes the requested fields of the GraphQL type Widget.
type updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget struct {
	Id   string `json:"id"`
	Type string `json:"type"`
}

// GetId returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget.Id, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget) GetId() string {
	return v.Id
}

// GetType returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget.Type, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget) GetType() string {
	return v.Type
}

// updateNotificationResponse is returned by updateNotification on success.
type updateNotificationResponse struct {
	UpdateNotificationServiceConfiguration *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse `json:"updateNotificationServiceConfiguration"`
}

// GetUpdateNotificationServiceConfiguration returns updateNotificationResponse.UpdateNotificationServiceConfiguration, and is useful for accessing the field via an interface.
func (v *updateNotificationResponse) GetUpdateNotificationServiceConfiguration() *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse {
	return v.UpdateNotificationServiceConfiguration
}

// updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse includes the requested fields of the GraphQL type UpdateNotificationServiceConfigurationResponse.
type updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse struct {
	Code          string                                                                                                                                  `json:"code"`
	Success       bool                                                                                                                                    `json:"success"`
	Message       string                                                                                                                                  `json:"message"`
	Configuration *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService `json:"configuration"`
}

// GetCode returns updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse.Code, and is useful for accessing the field via an interface.
func (v *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse) GetCode() string {
	return v.Code
}

// GetSuccess returns updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse.Success, and is useful for accessing the field via an interface.
func (v *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse) GetSuccess() bool {
	return v.Success
}

// GetMessage returns updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse.Message, and is useful for accessing the field via an interface.
func (v *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse) GetMessage() string {
	return v.Message
}

// GetConfiguration returns updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse.Configuration, and is useful for accessing the field via an interface.
func (v *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse) GetConfiguration() *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService {
	return v.Configuration
}

// updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService includes the requested fields of the GraphQL type NotificationService.
type updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService struct {
	// The ID of the NotificationService.
	Id string `json:"id"`
	// The type of the NotificationService.
	Type string `json:"type"`
	// The title of the NotificationService.
	Title string `json:"title"`
	// The settings of the NotificationService.
	Settings *any `json:"settings"`
	// The created time of the NotificationService.
	CreatedAt time.Time `json:"createdAt"`
	// The createdBy user ID of the NotificationService.
	CreatedBy string `json:"createdBy"`
	// The description of the NotificationService.
	Description *string `json:"description"`
}

// GetId returns updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.Id, and is useful for accessing the field via an interface.
func (v *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetId() string {
	return v.Id
}

// GetType returns updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.Type, and is useful for accessing the field via an interface.
func (v *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetType() string {
	return v.Type
}

// GetTitle returns updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.Title, and is useful for accessing the field via an interface.
func (v *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetTitle() string {
	return v.Title
}

// GetSettings returns updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.Settings, and is useful for accessing the field via an interface.
func (v *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetSettings() *any {
	return v.Settings
}

// GetCreatedAt returns updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.CreatedAt, and is useful for accessing the field via an interface.
func (v *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetCreatedBy returns updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.CreatedBy, and is useful for accessing the field via an interface.
func (v *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetCreatedBy() string {
	return v.CreatedBy
}

// GetDescription returns updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.Description, and is useful for accessing the field via an interface.
func (v *updateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetDescription() *string {
	return v.Description
}

// updateWebsiteMutationDemDemMutations includes the requested fields of the GraphQL type DemMutations.
// The GraphQL type's documentation follows.
//
// Mutations related to Digital Experience Monitoring (DEM).
type updateWebsiteMutationDemDemMutations struct {
	UpdateWebsite updateWebsiteMutationDemDemMutationsUpdateWebsiteUpdateWebsiteSuccess `json:"updateWebsite"`
}

// GetUpdateWebsite returns updateWebsiteMutationDemDemMutations.UpdateWebsite, and is useful for accessing the field via an interface.
func (v *updateWebsiteMutationDemDemMutations) GetUpdateWebsite() updateWebsiteMutationDemDemMutationsUpdateWebsiteUpdateWebsiteSuccess {
	return v.UpdateWebsite
}

// updateWebsiteMutationDemDemMutationsUpdateWebsiteUpdateWebsiteSuccess includes the requested fields of the GraphQL type UpdateWebsiteSuccess.
type updateWebsiteMutationDemDemMutationsUpdateWebsiteUpdateWebsiteSuccess struct {
	// The id of the updated website.
	Id string `json:"id"`
}

// GetId returns updateWebsiteMutationDemDemMutationsUpdateWebsiteUpdateWebsiteSuccess.Id, and is useful for accessing the field via an interface.
func (v *updateWebsiteMutationDemDemMutationsUpdateWebsiteUpdateWebsiteSuccess) GetId() string {
	return v.Id
}

// updateWebsiteMutationResponse is returned by updateWebsiteMutation on success.
type updateWebsiteMutationResponse struct {
	Dem updateWebsiteMutationDemDemMutations `json:"dem"`
}

// GetDem returns updateWebsiteMutationResponse.Dem, and is useful for accessing the field via an interface.
func (v *updateWebsiteMutationResponse) GetDem() updateWebsiteMutationDemDemMutations { return v.Dem }

// The query or mutation executed by createAlertDefinition.
const createAlertDefinition_Operation = `
mutation createAlertDefinition ($definition: AlertDefinitionInput!) {
	alertMutations {
		createAlertDefinition(definition: $definition) {
			actions {
				configurationIds
				type
			}
			triggerResetActions
			conditionType
			flatCondition {
				id
				links {
					name
					values
				}
				value {
					fieldName
					operator
					type
					query
				}
			}
			description
			enabled
			id
			name
			organizationId
			severity
			triggered
			triggeredTime
			targetEntityTypes
			muteInfo {
				muted
				until
			}
			userId
		}
	}
}
`

func createAlertDefinition(
	ctx context.Context,
	client graphql.Client,
	definition AlertDefinitionInput,
) (*createAlertDefinitionResponse, error) {
	req := &graphql.Request{
		OpName: "createAlertDefinition",
		Query:  createAlertDefinition_Operation,
		Variables: &__createAlertDefinitionInput{
			Definition: definition,
		},
	}
	var err error

	var data createAlertDefinitionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createDashboard.
const createDashboard_Operation = `
mutation createDashboard ($input: CreateDashboardInput!) {
	createDashboard(input: $input) {
		code
		success
		message
		dashboard {
			id
			name
			isPrivate
			systemReference
			createdAt
			updatedAt
			category {
				id
				name
				type
				owner {
					id
					name
				}
				createdAt
				updatedAt
			}
			owner {
				id
				name
			}
			widgets {
				id
				type
				properties
			}
			layout {
				id
				x
				y
				height
				width
			}
		}
	}
}
`

func createDashboard(
	ctx context.Context,
	client graphql.Client,
	input CreateDashboardInput,
) (*createDashboardResponse, error) {
	req := &graphql.Request{
		OpName: "createDashboard",
		Query:  createDashboard_Operation,
		Variables: &__createDashboardInput{
			Input: input,
		},
	}
	var err error

	var data createDashboardResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createNotification.
const createNotification_Operation = `
mutation createNotification ($configuration: createNotificationServiceConfigurationInput!) {
	createNotificationServiceConfiguration(configuration: $configuration) {
		code
		success
		message
		configuration {
			id
			type
			title
			settings
			createdAt
			createdBy
			description
		}
	}
}
`

func createNotification(
	ctx context.Context,
	client graphql.Client,
	configuration CreateNotificationServiceConfigurationInput,
) (*createNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "createNotification",
		Query:  createNotification_Operation,
		Variables: &__createNotificationInput{
			Configuration: configuration,
		},
	}
	var err error

	var data createNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createWebsiteMutation.
const createWebsiteMutation_Operation = `
mutation createWebsiteMutation ($input: CreateWebsiteInput!) {
	dem {
		createWebsite(input: $input) {
			id
		}
	}
}
`

func createWebsiteMutation(
	ctx context.Context,
	client graphql.Client,
	input CreateWebsiteInput,
) (*createWebsiteMutationResponse, error) {
	req := &graphql.Request{
		OpName: "createWebsiteMutation",
		Query:  createWebsiteMutation_Operation,
		Variables: &__createWebsiteMutationInput{
			Input: input,
		},
	}
	var err error

	var data createWebsiteMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deleteAlertDefinition.
const deleteAlertDefinition_Operation = `
mutation deleteAlertDefinition ($deleteAlertDefinitionId: ID!) {
	alertMutations {
		deleteAlertDefinition(id: $deleteAlertDefinitionId)
	}
}
`

func deleteAlertDefinition(
	ctx context.Context,
	client graphql.Client,
	deleteAlertDefinitionId string,
) (*deleteAlertDefinitionResponse, error) {
	req := &graphql.Request{
		OpName: "deleteAlertDefinition",
		Query:  deleteAlertDefinition_Operation,
		Variables: &__deleteAlertDefinitionInput{
			DeleteAlertDefinitionId: deleteAlertDefinitionId,
		},
	}
	var err error

	var data deleteAlertDefinitionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deleteDashboard.
const deleteDashboard_Operation = `
mutation deleteDashboard ($input: DeleteDashboardInput!) {
	deleteDashboard(input: $input) {
		code
		success
		message
	}
}
`

func deleteDashboard(
	ctx context.Context,
	client graphql.Client,
	input DeleteDashboardInput,
) (*deleteDashboardResponse, error) {
	req := &graphql.Request{
		OpName: "deleteDashboard",
		Query:  deleteDashboard_Operation,
		Variables: &__deleteDashboardInput{
			Input: input,
		},
	}
	var err error

	var data deleteDashboardResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deleteNotification.
const deleteNotification_Operation = `
mutation deleteNotification ($input: DeleteNotificationServiceConfigurationInput!) {
	deleteNotificationServiceConfiguration(input: $input) {
		success
		code
		message
	}
}
`

func deleteNotification(
	ctx context.Context,
	client graphql.Client,
	input DeleteNotificationServiceConfigurationInput,
) (*deleteNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "deleteNotification",
		Query:  deleteNotification_Operation,
		Variables: &__deleteNotificationInput{
			Input: input,
		},
	}
	var err error

	var data deleteNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deleteWebsiteMutation.
const deleteWebsiteMutation_Operation = `
mutation deleteWebsiteMutation ($input: DeleteWebsiteInput!) {
	dem {
		deleteWebsite(input: $input) {
			... on DeleteWebsiteSuccess {
				id
			}
		}
	}
}
`

func deleteWebsiteMutation(
	ctx context.Context,
	client graphql.Client,
	input DeleteWebsiteInput,
) (*deleteWebsiteMutationResponse, error) {
	req := &graphql.Request{
		OpName: "deleteWebsiteMutation",
		Query:  deleteWebsiteMutation_Operation,
		Variables: &__deleteWebsiteMutationInput{
			Input: input,
		},
	}
	var err error

	var data deleteWebsiteMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getAlertDefinitions.
const getAlertDefinitions_Operation = `
query getAlertDefinitions ($filter: AlertFilterInput!, $paging: PagingInput, $sortBy: SortInput) {
	alertQueries {
		alertDefinitions(filter: $filter, paging: $paging, sortBy: $sortBy) {
			alertDefinitions {
				actions {
					configurationIds
					type
				}
				triggerResetActions
				conditionType
				flatCondition {
					id
					links {
						name
						values
					}
					value {
						fieldName
						operator
						type
						query
					}
				}
				description
				enabled
				id
				name
				organizationId
				severity
				triggered
				triggeredTime
				targetEntityTypes
				muteInfo {
					muted
					until
				}
				userId
			}
		}
	}
}
`

func getAlertDefinitions(
	ctx context.Context,
	client graphql.Client,
	filter AlertFilterInput,
	paging *PagingInput,
	sortBy *SortInput,
) (*getAlertDefinitionsResponse, error) {
	req := &graphql.Request{
		OpName: "getAlertDefinitions",
		Query:  getAlertDefinitions_Operation,
		Variables: &__getAlertDefinitionsInput{
			Filter: filter,
			Paging: paging,
			SortBy: sortBy,
		},
	}
	var err error

	var data getAlertDefinitionsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getDashboardById.
const getDashboardById_Operation = `
query getDashboardById ($id: ID!) {
	dashboards {
		byId(id: $id) {
			id
			name
			isPrivate
			systemReference
			createdAt
			updatedAt
			category {
				id
				name
				type
				owner {
					id
					name
				}
				createdAt
				updatedAt
			}
			owner {
				id
				name
			}
			widgets {
				id
				type
				properties
			}
			layout {
				id
				x
				y
				height
				width
			}
		}
	}
}
`

func getDashboardById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*getDashboardByIdResponse, error) {
	req := &graphql.Request{
		OpName: "getDashboardById",
		Query:  getDashboardById_Operation,
		Variables: &__getDashboardByIdInput{
			Id: id,
		},
	}
	var err error

	var data getDashboardByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getNotification.
const getNotification_Operation = `
query getNotification ($configurationId: String!, $configurationType: String!) {
	user {
		currentOrganization {
			notificationServiceConfiguration(configurationId: $configurationId, configurationType: $configurationType) {
				id
				type
				title
				settings
				createdAt
				createdBy
				description
			}
		}
	}
}
`

func getNotification(
	ctx context.Context,
	client graphql.Client,
	configurationId string,
	configurationType string,
) (*getNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "getNotification",
		Query:  getNotification_Operation,
		Variables: &__getNotificationInput{
			ConfigurationId:   configurationId,
			ConfigurationType: configurationType,
		},
	}
	var err error

	var data getNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getWebsiteById.
const getWebsiteById_Operation = `
query getWebsiteById ($id: ID!) {
	entities {
		byId(id: $id) {
			__typename
			... on Website {
				name
				url
				monitoring {
					customHeaders {
						name
						value
					}
					availability {
						protocols
						locationOptions {
							type
							value
						}
						platformOptions {
							testFromAll
							platforms
						}
						testFromLocation
						testIntervalInSeconds
						checkForString {
							operator
							value
						}
						ssl {
							enabled
							daysPriorToExpiration
							ignoreIntermediateCertificates
						}
					}
					rum {
						apdexTimeInSeconds
						snippet
						spa
					}
					options {
						isAvailabilityActive
						isRumActive
					}
				}
			}
		}
	}
}
`

func getWebsiteById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*getWebsiteByIdResponse, error) {
	req := &graphql.Request{
		OpName: "getWebsiteById",
		Query:  getWebsiteById_Operation,
		Variables: &__getWebsiteByIdInput{
			Id: id,
		},
	}
	var err error

	var data getWebsiteByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateAlertDefinition.
const updateAlertDefinition_Operation = `
mutation updateAlertDefinition ($definition: AlertDefinitionInput!, $updateAlertDefinitionId: ID!) {
	alertMutations {
		updateAlertDefinition(definition: $definition, id: $updateAlertDefinitionId) {
			actions {
				configurationIds
				type
			}
			triggerResetActions
			conditionType
			flatCondition {
				id
				links {
					name
					values
				}
				value {
					fieldName
					operator
					type
					query
				}
			}
			description
			enabled
			id
			name
			organizationId
			severity
			triggered
			triggeredTime
			targetEntityTypes
			muteInfo {
				muted
				until
			}
			userId
		}
	}
}
`

func updateAlertDefinition(
	ctx context.Context,
	client graphql.Client,
	definition AlertDefinitionInput,
	updateAlertDefinitionId string,
) (*updateAlertDefinitionResponse, error) {
	req := &graphql.Request{
		OpName: "updateAlertDefinition",
		Query:  updateAlertDefinition_Operation,
		Variables: &__updateAlertDefinitionInput{
			Definition:              definition,
			UpdateAlertDefinitionId: updateAlertDefinitionId,
		},
	}
	var err error

	var data updateAlertDefinitionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateDashboard.
const updateDashboard_Operation = `
mutation updateDashboard ($input: UpdateDashboardInput!) {
	updateDashboard(input: $input) {
		code
		success
		message
		dashboard {
			id
			owner {
				id
				name
			}
			widgets {
				id
				type
			}
			layout {
				id
				x
				y
				width
				height
			}
			createdAt
			updatedAt
		}
	}
}
`

func updateDashboard(
	ctx context.Context,
	client graphql.Client,
	input UpdateDashboardInput,
) (*updateDashboardResponse, error) {
	req := &graphql.Request{
		OpName: "updateDashboard",
		Query:  updateDashboard_Operation,
		Variables: &__updateDashboardInput{
			Input: input,
		},
	}
	var err error

	var data updateDashboardResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateNotification.
const updateNotification_Operation = `
mutation updateNotification ($configuration: UpdateNotificationServiceConfigurationInput!) {
	updateNotificationServiceConfiguration(input: $configuration) {
		code
		success
		message
		configuration {
			id
			type
			title
			settings
			createdAt
			createdBy
			description
		}
	}
}
`

func updateNotification(
	ctx context.Context,
	client graphql.Client,
	configuration UpdateNotificationServiceConfigurationInput,
) (*updateNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "updateNotification",
		Query:  updateNotification_Operation,
		Variables: &__updateNotificationInput{
			Configuration: configuration,
		},
	}
	var err error

	var data updateNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateWebsiteMutation.
const updateWebsiteMutation_Operation = `
mutation updateWebsiteMutation ($input: UpdateWebsiteInput!) {
	dem {
		updateWebsite(input: $input) {
			... on UpdateWebsiteSuccess {
				id
			}
		}
	}
}
`

func updateWebsiteMutation(
	ctx context.Context,
	client graphql.Client,
	input UpdateWebsiteInput,
) (*updateWebsiteMutationResponse, error) {
	req := &graphql.Request{
		OpName: "updateWebsiteMutation",
		Query:  updateWebsiteMutation_Operation,
		Variables: &__updateWebsiteMutationInput{
			Input: input,
		},
	}
	var err error

	var data updateWebsiteMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
